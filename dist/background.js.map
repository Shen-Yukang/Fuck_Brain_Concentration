{"version":3,"file":"background.js","sources":["../node_modules/.pnpm/webextension-polyfill@0.12.0/node_modules/webextension-polyfill/dist/browser-polyfill.js","../packages/storage/dist/lib/base/enums.js","../packages/storage/dist/lib/base/base.js","../packages/storage/dist/lib/impl/exampleThemeStorage.js","../packages/storage/dist/lib/impl/focusStorage.js","../packages/storage/dist/lib/impl/blockedUrlsStorage.js","../packages/storage/dist/lib/impl/notificationCache.js","../packages/storage/dist/lib/impl/aiConfigStorage.js","../packages/storage/dist/lib/impl/soundSettings.js","../packages/storage/dist/lib/impl/ttsConfigStorage.js","../packages/storage/dist/lib/impl/voiceCacheStorage.js","../chrome-extension/src/constants/index.ts","../chrome-extension/src/services/ttsService.ts","../chrome-extension/src/background/managers/audioManager.ts","../packages/shared/lib/services/notificationGenerator.ts","../chrome-extension/src/background/managers/notificationManager.ts","../chrome-extension/src/background/site-handlers.ts","../chrome-extension/src/background/managers/urlBlocker.ts","../chrome-extension/src/background/managers/focusManager.ts","../chrome-extension/src/background/index.ts"],"sourcesContent":["(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(\"webextension-polyfill\", [\"module\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod);\n    global.browser = mod.exports;\n  }\n})(typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : this, function (module) {\n  /* webextension-polyfill - v0.12.0 - Tue May 14 2024 18:01:29 */\n  /* -*- Mode: indent-tabs-mode: nil; js-indent-level: 2 -*- */\n  /* vim: set sts=2 sw=2 et tw=80: */\n  /* This Source Code Form is subject to the terms of the Mozilla Public\n   * License, v. 2.0. If a copy of the MPL was not distributed with this\n   * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n  \"use strict\";\n\n  if (!(globalThis.chrome && globalThis.chrome.runtime && globalThis.chrome.runtime.id)) {\n    throw new Error(\"This script should only be loaded in a browser extension.\");\n  }\n  if (!(globalThis.browser && globalThis.browser.runtime && globalThis.browser.runtime.id)) {\n    const CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE = \"The message port closed before a response was received.\";\n\n    // Wrapping the bulk of this polyfill in a one-time-use function is a minor\n    // optimization for Firefox. Since Spidermonkey does not fully parse the\n    // contents of a function until the first time it's called, and since it will\n    // never actually need to be called, this allows the polyfill to be included\n    // in Firefox nearly for free.\n    const wrapAPIs = extensionAPIs => {\n      // NOTE: apiMetadata is associated to the content of the api-metadata.json file\n      // at build time by replacing the following \"include\" with the content of the\n      // JSON file.\n      const apiMetadata = {\n        \"alarms\": {\n          \"clear\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"clearAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"bookmarks\": {\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getChildren\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getRecent\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getSubTree\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTree\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"move\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeTree\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"browserAction\": {\n          \"disable\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"enable\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"getBadgeBackgroundColor\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getBadgeText\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"openPopup\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"setBadgeBackgroundColor\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setBadgeText\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"setPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"browsingData\": {\n          \"remove\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"removeCache\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeCookies\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeDownloads\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeFormData\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeHistory\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeLocalStorage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removePasswords\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removePluginData\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"settings\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"commands\": {\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"contextMenus\": {\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"cookies\": {\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAllCookieStores\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"set\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"devtools\": {\n          \"inspectedWindow\": {\n            \"eval\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 2,\n              \"singleCallbackArg\": false\n            }\n          },\n          \"panels\": {\n            \"create\": {\n              \"minArgs\": 3,\n              \"maxArgs\": 3,\n              \"singleCallbackArg\": true\n            },\n            \"elements\": {\n              \"createSidebarPane\": {\n                \"minArgs\": 1,\n                \"maxArgs\": 1\n              }\n            }\n          }\n        },\n        \"downloads\": {\n          \"cancel\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"download\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"erase\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getFileIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"open\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"pause\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeFile\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"resume\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"show\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"extension\": {\n          \"isAllowedFileSchemeAccess\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"isAllowedIncognitoAccess\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"history\": {\n          \"addUrl\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"deleteAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"deleteRange\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"deleteUrl\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getVisits\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"search\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"i18n\": {\n          \"detectLanguage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAcceptLanguages\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"identity\": {\n          \"launchWebAuthFlow\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"idle\": {\n          \"queryState\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"management\": {\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getSelf\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"setEnabled\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"uninstallSelf\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"notifications\": {\n          \"clear\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getPermissionLevel\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        },\n        \"pageAction\": {\n          \"getPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"hide\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setIcon\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"setPopup\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"setTitle\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          },\n          \"show\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1,\n            \"fallbackToNoCallback\": true\n          }\n        },\n        \"permissions\": {\n          \"contains\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"request\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"runtime\": {\n          \"getBackgroundPage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getPlatformInfo\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"openOptionsPage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"requestUpdateCheck\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"sendMessage\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 3\n          },\n          \"sendNativeMessage\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"setUninstallURL\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"sessions\": {\n          \"getDevices\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getRecentlyClosed\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"restore\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          }\n        },\n        \"storage\": {\n          \"local\": {\n            \"clear\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 0\n            },\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"remove\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            },\n            \"set\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          },\n          \"managed\": {\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            }\n          },\n          \"sync\": {\n            \"clear\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 0\n            },\n            \"get\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"getBytesInUse\": {\n              \"minArgs\": 0,\n              \"maxArgs\": 1\n            },\n            \"remove\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            },\n            \"set\": {\n              \"minArgs\": 1,\n              \"maxArgs\": 1\n            }\n          }\n        },\n        \"tabs\": {\n          \"captureVisibleTab\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 2\n          },\n          \"create\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"detectLanguage\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"discard\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"duplicate\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"executeScript\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getCurrent\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          },\n          \"getZoom\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getZoomSettings\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"goBack\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"goForward\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"highlight\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"insertCSS\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"move\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          },\n          \"query\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"reload\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 2\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"removeCSS\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"sendMessage\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 3\n          },\n          \"setZoom\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"setZoomSettings\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"update\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          }\n        },\n        \"topSites\": {\n          \"get\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"webNavigation\": {\n          \"getAllFrames\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"getFrame\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          }\n        },\n        \"webRequest\": {\n          \"handlerBehaviorChanged\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 0\n          }\n        },\n        \"windows\": {\n          \"create\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"get\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 2\n          },\n          \"getAll\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getCurrent\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"getLastFocused\": {\n            \"minArgs\": 0,\n            \"maxArgs\": 1\n          },\n          \"remove\": {\n            \"minArgs\": 1,\n            \"maxArgs\": 1\n          },\n          \"update\": {\n            \"minArgs\": 2,\n            \"maxArgs\": 2\n          }\n        }\n      };\n      if (Object.keys(apiMetadata).length === 0) {\n        throw new Error(\"api-metadata.json has not been included in browser-polyfill\");\n      }\n\n      /**\n       * A WeakMap subclass which creates and stores a value for any key which does\n       * not exist when accessed, but behaves exactly as an ordinary WeakMap\n       * otherwise.\n       *\n       * @param {function} createItem\n       *        A function which will be called in order to create the value for any\n       *        key which does not exist, the first time it is accessed. The\n       *        function receives, as its only argument, the key being created.\n       */\n      class DefaultWeakMap extends WeakMap {\n        constructor(createItem, items = undefined) {\n          super(items);\n          this.createItem = createItem;\n        }\n        get(key) {\n          if (!this.has(key)) {\n            this.set(key, this.createItem(key));\n          }\n          return super.get(key);\n        }\n      }\n\n      /**\n       * Returns true if the given object is an object with a `then` method, and can\n       * therefore be assumed to behave as a Promise.\n       *\n       * @param {*} value The value to test.\n       * @returns {boolean} True if the value is thenable.\n       */\n      const isThenable = value => {\n        return value && typeof value === \"object\" && typeof value.then === \"function\";\n      };\n\n      /**\n       * Creates and returns a function which, when called, will resolve or reject\n       * the given promise based on how it is called:\n       *\n       * - If, when called, `chrome.runtime.lastError` contains a non-null object,\n       *   the promise is rejected with that value.\n       * - If the function is called with exactly one argument, the promise is\n       *   resolved to that value.\n       * - Otherwise, the promise is resolved to an array containing all of the\n       *   function's arguments.\n       *\n       * @param {object} promise\n       *        An object containing the resolution and rejection functions of a\n       *        promise.\n       * @param {function} promise.resolve\n       *        The promise's resolution function.\n       * @param {function} promise.reject\n       *        The promise's rejection function.\n       * @param {object} metadata\n       *        Metadata about the wrapped method which has created the callback.\n       * @param {boolean} metadata.singleCallbackArg\n       *        Whether or not the promise is resolved with only the first\n       *        argument of the callback, alternatively an array of all the\n       *        callback arguments is resolved. By default, if the callback\n       *        function is invoked with only a single argument, that will be\n       *        resolved to the promise, while all arguments will be resolved as\n       *        an array if multiple are given.\n       *\n       * @returns {function}\n       *        The generated callback function.\n       */\n      const makeCallback = (promise, metadata) => {\n        return (...callbackArgs) => {\n          if (extensionAPIs.runtime.lastError) {\n            promise.reject(new Error(extensionAPIs.runtime.lastError.message));\n          } else if (metadata.singleCallbackArg || callbackArgs.length <= 1 && metadata.singleCallbackArg !== false) {\n            promise.resolve(callbackArgs[0]);\n          } else {\n            promise.resolve(callbackArgs);\n          }\n        };\n      };\n      const pluralizeArguments = numArgs => numArgs == 1 ? \"argument\" : \"arguments\";\n\n      /**\n       * Creates a wrapper function for a method with the given name and metadata.\n       *\n       * @param {string} name\n       *        The name of the method which is being wrapped.\n       * @param {object} metadata\n       *        Metadata about the method being wrapped.\n       * @param {integer} metadata.minArgs\n       *        The minimum number of arguments which must be passed to the\n       *        function. If called with fewer than this number of arguments, the\n       *        wrapper will raise an exception.\n       * @param {integer} metadata.maxArgs\n       *        The maximum number of arguments which may be passed to the\n       *        function. If called with more than this number of arguments, the\n       *        wrapper will raise an exception.\n       * @param {boolean} metadata.singleCallbackArg\n       *        Whether or not the promise is resolved with only the first\n       *        argument of the callback, alternatively an array of all the\n       *        callback arguments is resolved. By default, if the callback\n       *        function is invoked with only a single argument, that will be\n       *        resolved to the promise, while all arguments will be resolved as\n       *        an array if multiple are given.\n       *\n       * @returns {function(object, ...*)}\n       *       The generated wrapper function.\n       */\n      const wrapAsyncFunction = (name, metadata) => {\n        return function asyncFunctionWrapper(target, ...args) {\n          if (args.length < metadata.minArgs) {\n            throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n          }\n          if (args.length > metadata.maxArgs) {\n            throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n          }\n          return new Promise((resolve, reject) => {\n            if (metadata.fallbackToNoCallback) {\n              // This API method has currently no callback on Chrome, but it return a promise on Firefox,\n              // and so the polyfill will try to call it with a callback first, and it will fallback\n              // to not passing the callback if the first call fails.\n              try {\n                target[name](...args, makeCallback({\n                  resolve,\n                  reject\n                }, metadata));\n              } catch (cbError) {\n                console.warn(`${name} API method doesn't seem to support the callback parameter, ` + \"falling back to call it without a callback: \", cbError);\n                target[name](...args);\n\n                // Update the API method metadata, so that the next API calls will not try to\n                // use the unsupported callback anymore.\n                metadata.fallbackToNoCallback = false;\n                metadata.noCallback = true;\n                resolve();\n              }\n            } else if (metadata.noCallback) {\n              target[name](...args);\n              resolve();\n            } else {\n              target[name](...args, makeCallback({\n                resolve,\n                reject\n              }, metadata));\n            }\n          });\n        };\n      };\n\n      /**\n       * Wraps an existing method of the target object, so that calls to it are\n       * intercepted by the given wrapper function. The wrapper function receives,\n       * as its first argument, the original `target` object, followed by each of\n       * the arguments passed to the original method.\n       *\n       * @param {object} target\n       *        The original target object that the wrapped method belongs to.\n       * @param {function} method\n       *        The method being wrapped. This is used as the target of the Proxy\n       *        object which is created to wrap the method.\n       * @param {function} wrapper\n       *        The wrapper function which is called in place of a direct invocation\n       *        of the wrapped method.\n       *\n       * @returns {Proxy<function>}\n       *        A Proxy object for the given method, which invokes the given wrapper\n       *        method in its place.\n       */\n      const wrapMethod = (target, method, wrapper) => {\n        return new Proxy(method, {\n          apply(targetMethod, thisObj, args) {\n            return wrapper.call(thisObj, target, ...args);\n          }\n        });\n      };\n      let hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n\n      /**\n       * Wraps an object in a Proxy which intercepts and wraps certain methods\n       * based on the given `wrappers` and `metadata` objects.\n       *\n       * @param {object} target\n       *        The target object to wrap.\n       *\n       * @param {object} [wrappers = {}]\n       *        An object tree containing wrapper functions for special cases. Any\n       *        function present in this object tree is called in place of the\n       *        method in the same location in the `target` object tree. These\n       *        wrapper methods are invoked as described in {@see wrapMethod}.\n       *\n       * @param {object} [metadata = {}]\n       *        An object tree containing metadata used to automatically generate\n       *        Promise-based wrapper functions for asynchronous. Any function in\n       *        the `target` object tree which has a corresponding metadata object\n       *        in the same location in the `metadata` tree is replaced with an\n       *        automatically-generated wrapper function, as described in\n       *        {@see wrapAsyncFunction}\n       *\n       * @returns {Proxy<object>}\n       */\n      const wrapObject = (target, wrappers = {}, metadata = {}) => {\n        let cache = Object.create(null);\n        let handlers = {\n          has(proxyTarget, prop) {\n            return prop in target || prop in cache;\n          },\n          get(proxyTarget, prop, receiver) {\n            if (prop in cache) {\n              return cache[prop];\n            }\n            if (!(prop in target)) {\n              return undefined;\n            }\n            let value = target[prop];\n            if (typeof value === \"function\") {\n              // This is a method on the underlying object. Check if we need to do\n              // any wrapping.\n\n              if (typeof wrappers[prop] === \"function\") {\n                // We have a special-case wrapper for this method.\n                value = wrapMethod(target, target[prop], wrappers[prop]);\n              } else if (hasOwnProperty(metadata, prop)) {\n                // This is an async method that we have metadata for. Create a\n                // Promise wrapper for it.\n                let wrapper = wrapAsyncFunction(prop, metadata[prop]);\n                value = wrapMethod(target, target[prop], wrapper);\n              } else {\n                // This is a method that we don't know or care about. Return the\n                // original method, bound to the underlying object.\n                value = value.bind(target);\n              }\n            } else if (typeof value === \"object\" && value !== null && (hasOwnProperty(wrappers, prop) || hasOwnProperty(metadata, prop))) {\n              // This is an object that we need to do some wrapping for the children\n              // of. Create a sub-object wrapper for it with the appropriate child\n              // metadata.\n              value = wrapObject(value, wrappers[prop], metadata[prop]);\n            } else if (hasOwnProperty(metadata, \"*\")) {\n              // Wrap all properties in * namespace.\n              value = wrapObject(value, wrappers[prop], metadata[\"*\"]);\n            } else {\n              // We don't need to do any wrapping for this property,\n              // so just forward all access to the underlying object.\n              Object.defineProperty(cache, prop, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                  return target[prop];\n                },\n                set(value) {\n                  target[prop] = value;\n                }\n              });\n              return value;\n            }\n            cache[prop] = value;\n            return value;\n          },\n          set(proxyTarget, prop, value, receiver) {\n            if (prop in cache) {\n              cache[prop] = value;\n            } else {\n              target[prop] = value;\n            }\n            return true;\n          },\n          defineProperty(proxyTarget, prop, desc) {\n            return Reflect.defineProperty(cache, prop, desc);\n          },\n          deleteProperty(proxyTarget, prop) {\n            return Reflect.deleteProperty(cache, prop);\n          }\n        };\n\n        // Per contract of the Proxy API, the \"get\" proxy handler must return the\n        // original value of the target if that value is declared read-only and\n        // non-configurable. For this reason, we create an object with the\n        // prototype set to `target` instead of using `target` directly.\n        // Otherwise we cannot return a custom object for APIs that\n        // are declared read-only and non-configurable, such as `chrome.devtools`.\n        //\n        // The proxy handlers themselves will still use the original `target`\n        // instead of the `proxyTarget`, so that the methods and properties are\n        // dereferenced via the original targets.\n        let proxyTarget = Object.create(target);\n        return new Proxy(proxyTarget, handlers);\n      };\n\n      /**\n       * Creates a set of wrapper functions for an event object, which handles\n       * wrapping of listener functions that those messages are passed.\n       *\n       * A single wrapper is created for each listener function, and stored in a\n       * map. Subsequent calls to `addListener`, `hasListener`, or `removeListener`\n       * retrieve the original wrapper, so that  attempts to remove a\n       * previously-added listener work as expected.\n       *\n       * @param {DefaultWeakMap<function, function>} wrapperMap\n       *        A DefaultWeakMap object which will create the appropriate wrapper\n       *        for a given listener function when one does not exist, and retrieve\n       *        an existing one when it does.\n       *\n       * @returns {object}\n       */\n      const wrapEvent = wrapperMap => ({\n        addListener(target, listener, ...args) {\n          target.addListener(wrapperMap.get(listener), ...args);\n        },\n        hasListener(target, listener) {\n          return target.hasListener(wrapperMap.get(listener));\n        },\n        removeListener(target, listener) {\n          target.removeListener(wrapperMap.get(listener));\n        }\n      });\n      const onRequestFinishedWrappers = new DefaultWeakMap(listener => {\n        if (typeof listener !== \"function\") {\n          return listener;\n        }\n\n        /**\n         * Wraps an onRequestFinished listener function so that it will return a\n         * `getContent()` property which returns a `Promise` rather than using a\n         * callback API.\n         *\n         * @param {object} req\n         *        The HAR entry object representing the network request.\n         */\n        return function onRequestFinished(req) {\n          const wrappedReq = wrapObject(req, {} /* wrappers */, {\n            getContent: {\n              minArgs: 0,\n              maxArgs: 0\n            }\n          });\n          listener(wrappedReq);\n        };\n      });\n      const onMessageWrappers = new DefaultWeakMap(listener => {\n        if (typeof listener !== \"function\") {\n          return listener;\n        }\n\n        /**\n         * Wraps a message listener function so that it may send responses based on\n         * its return value, rather than by returning a sentinel value and calling a\n         * callback. If the listener function returns a Promise, the response is\n         * sent when the promise either resolves or rejects.\n         *\n         * @param {*} message\n         *        The message sent by the other end of the channel.\n         * @param {object} sender\n         *        Details about the sender of the message.\n         * @param {function(*)} sendResponse\n         *        A callback which, when called with an arbitrary argument, sends\n         *        that value as a response.\n         * @returns {boolean}\n         *        True if the wrapped listener returned a Promise, which will later\n         *        yield a response. False otherwise.\n         */\n        return function onMessage(message, sender, sendResponse) {\n          let didCallSendResponse = false;\n          let wrappedSendResponse;\n          let sendResponsePromise = new Promise(resolve => {\n            wrappedSendResponse = function (response) {\n              didCallSendResponse = true;\n              resolve(response);\n            };\n          });\n          let result;\n          try {\n            result = listener(message, sender, wrappedSendResponse);\n          } catch (err) {\n            result = Promise.reject(err);\n          }\n          const isResultThenable = result !== true && isThenable(result);\n\n          // If the listener didn't returned true or a Promise, or called\n          // wrappedSendResponse synchronously, we can exit earlier\n          // because there will be no response sent from this listener.\n          if (result !== true && !isResultThenable && !didCallSendResponse) {\n            return false;\n          }\n\n          // A small helper to send the message if the promise resolves\n          // and an error if the promise rejects (a wrapped sendMessage has\n          // to translate the message into a resolved promise or a rejected\n          // promise).\n          const sendPromisedResult = promise => {\n            promise.then(msg => {\n              // send the message value.\n              sendResponse(msg);\n            }, error => {\n              // Send a JSON representation of the error if the rejected value\n              // is an instance of error, or the object itself otherwise.\n              let message;\n              if (error && (error instanceof Error || typeof error.message === \"string\")) {\n                message = error.message;\n              } else {\n                message = \"An unexpected error occurred\";\n              }\n              sendResponse({\n                __mozWebExtensionPolyfillReject__: true,\n                message\n              });\n            }).catch(err => {\n              // Print an error on the console if unable to send the response.\n              console.error(\"Failed to send onMessage rejected reply\", err);\n            });\n          };\n\n          // If the listener returned a Promise, send the resolved value as a\n          // result, otherwise wait the promise related to the wrappedSendResponse\n          // callback to resolve and send it as a response.\n          if (isResultThenable) {\n            sendPromisedResult(result);\n          } else {\n            sendPromisedResult(sendResponsePromise);\n          }\n\n          // Let Chrome know that the listener is replying.\n          return true;\n        };\n      });\n      const wrappedSendMessageCallback = ({\n        reject,\n        resolve\n      }, reply) => {\n        if (extensionAPIs.runtime.lastError) {\n          // Detect when none of the listeners replied to the sendMessage call and resolve\n          // the promise to undefined as in Firefox.\n          // See https://github.com/mozilla/webextension-polyfill/issues/130\n          if (extensionAPIs.runtime.lastError.message === CHROME_SEND_MESSAGE_CALLBACK_NO_RESPONSE_MESSAGE) {\n            resolve();\n          } else {\n            reject(new Error(extensionAPIs.runtime.lastError.message));\n          }\n        } else if (reply && reply.__mozWebExtensionPolyfillReject__) {\n          // Convert back the JSON representation of the error into\n          // an Error instance.\n          reject(new Error(reply.message));\n        } else {\n          resolve(reply);\n        }\n      };\n      const wrappedSendMessage = (name, metadata, apiNamespaceObj, ...args) => {\n        if (args.length < metadata.minArgs) {\n          throw new Error(`Expected at least ${metadata.minArgs} ${pluralizeArguments(metadata.minArgs)} for ${name}(), got ${args.length}`);\n        }\n        if (args.length > metadata.maxArgs) {\n          throw new Error(`Expected at most ${metadata.maxArgs} ${pluralizeArguments(metadata.maxArgs)} for ${name}(), got ${args.length}`);\n        }\n        return new Promise((resolve, reject) => {\n          const wrappedCb = wrappedSendMessageCallback.bind(null, {\n            resolve,\n            reject\n          });\n          args.push(wrappedCb);\n          apiNamespaceObj.sendMessage(...args);\n        });\n      };\n      const staticWrappers = {\n        devtools: {\n          network: {\n            onRequestFinished: wrapEvent(onRequestFinishedWrappers)\n          }\n        },\n        runtime: {\n          onMessage: wrapEvent(onMessageWrappers),\n          onMessageExternal: wrapEvent(onMessageWrappers),\n          sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {\n            minArgs: 1,\n            maxArgs: 3\n          })\n        },\n        tabs: {\n          sendMessage: wrappedSendMessage.bind(null, \"sendMessage\", {\n            minArgs: 2,\n            maxArgs: 3\n          })\n        }\n      };\n      const settingMetadata = {\n        clear: {\n          minArgs: 1,\n          maxArgs: 1\n        },\n        get: {\n          minArgs: 1,\n          maxArgs: 1\n        },\n        set: {\n          minArgs: 1,\n          maxArgs: 1\n        }\n      };\n      apiMetadata.privacy = {\n        network: {\n          \"*\": settingMetadata\n        },\n        services: {\n          \"*\": settingMetadata\n        },\n        websites: {\n          \"*\": settingMetadata\n        }\n      };\n      return wrapObject(extensionAPIs, staticWrappers, apiMetadata);\n    };\n\n    // The build process adds a UMD wrapper around this file, which makes the\n    // `module` variable available.\n    module.exports = wrapAPIs(chrome);\n  } else {\n    module.exports = globalThis.browser;\n  }\n});\n//# sourceMappingURL=browser-polyfill.js.map\n","/**\n * Storage area type for persisting and exchanging data.\n * @see https://developer.chrome.com/docs/extensions/reference/storage/#overview\n */\nexport var StorageEnum;\n(function (StorageEnum) {\n    /**\n     * Persist data locally against browser restarts. Will be deleted by uninstalling the extension.\n     * @default\n     */\n    StorageEnum[\"Local\"] = \"local\";\n    /**\n     * Uploads data to the users account in the cloud and syncs to the users browsers on other devices. Limits apply.\n     */\n    StorageEnum[\"Sync\"] = \"sync\";\n    /**\n     * Requires an [enterprise policy](https://www.chromium.org/administrators/configuring-policy-for-extensions) with a\n     * json schema for company wide config.\n     */\n    StorageEnum[\"Managed\"] = \"managed\";\n    /**\n     * Only persist data until the browser is closed. Recommended for service workers which can shutdown anytime and\n     * therefore need to restore their state. Set {@link SessionAccessLevelEnum} for permitting content scripts access.\n     * @implements Chromes [Session Storage](https://developer.chrome.com/docs/extensions/reference/storage/#property-session)\n     */\n    StorageEnum[\"Session\"] = \"session\";\n})(StorageEnum || (StorageEnum = {}));\n/**\n * Global access level requirement for the {@link StorageEnum.Session} Storage Area.\n * @implements Chromes [Session Access Level](https://developer.chrome.com/docs/extensions/reference/storage/#method-StorageArea-setAccessLevel)\n */\nexport var SessionAccessLevelEnum;\n(function (SessionAccessLevelEnum) {\n    /**\n     * Storage can only be accessed by Extension pages (not Content scripts).\n     * @default\n     */\n    SessionAccessLevelEnum[\"ExtensionPagesOnly\"] = \"TRUSTED_CONTEXTS\";\n    /**\n     * Storage can be accessed by both Extension pages and Content scripts.\n     */\n    SessionAccessLevelEnum[\"ExtensionPagesAndContentScripts\"] = \"TRUSTED_AND_UNTRUSTED_CONTEXTS\";\n})(SessionAccessLevelEnum || (SessionAccessLevelEnum = {}));\n","import { SessionAccessLevelEnum, StorageEnum } from './enums.js';\n/**\n * Chrome reference error while running `processTailwindFeatures` in tailwindcss.\n *  To avoid this, we need to check if the globalThis.chrome is available and add fallback logic.\n */\nconst chrome = globalThis.chrome;\n/**\n * Sets or updates an arbitrary cache with a new value or the result of an update function.\n */\nconst updateCache = async (valueOrUpdate, cache) => {\n    // Type guard to check if our value or update is a function\n    const isFunction = (value) => {\n        return typeof value === 'function';\n    };\n    // Type guard to check in case of a function, if its a Promise\n    const returnsPromise = (func) => {\n        // Use ReturnType to infer the return type of the function and check if it's a Promise\n        return func instanceof Promise;\n    };\n    if (isFunction(valueOrUpdate)) {\n        // Check if the function returns a Promise\n        if (returnsPromise(valueOrUpdate)) {\n            return valueOrUpdate(cache);\n        }\n        else {\n            return valueOrUpdate(cache);\n        }\n    }\n    else {\n        return valueOrUpdate;\n    }\n};\n/**\n * If one session storage needs access from content scripts, we need to enable it globally.\n * @default false\n */\nlet globalSessionAccessLevelFlag = false;\n/**\n * Checks if the storage permission is granted in the manifest.json.\n */\nfunction checkStoragePermission(storageEnum) {\n    if (!chrome) {\n        return;\n    }\n    if (chrome.storage[storageEnum] === undefined) {\n        throw new Error(`Check your storage permission in manifest.json: ${storageEnum} is not defined`);\n    }\n}\n/**\n * Creates a storage area for persisting and exchanging data.\n */\nexport function createStorage(key, fallback, config) {\n    let cache = null;\n    let initedCache = false;\n    let listeners = [];\n    const storageEnum = config?.storageEnum ?? StorageEnum.Local;\n    const liveUpdate = config?.liveUpdate ?? false;\n    const serialize = config?.serialization?.serialize ?? ((v) => v);\n    const deserialize = config?.serialization?.deserialize ?? (v => v);\n    // Set global session storage access level for StoryType.Session, only when not already done but needed.\n    if (globalSessionAccessLevelFlag === false &&\n        storageEnum === StorageEnum.Session &&\n        config?.sessionAccessForContentScripts === true) {\n        checkStoragePermission(storageEnum);\n        chrome?.storage[storageEnum]\n            .setAccessLevel({\n            accessLevel: SessionAccessLevelEnum.ExtensionPagesAndContentScripts,\n        })\n            .catch(error => {\n            console.warn(error);\n            console.warn('Please call setAccessLevel into different context, like a background script.');\n        });\n        globalSessionAccessLevelFlag = true;\n    }\n    // Register life cycle methods\n    const get = async () => {\n        checkStoragePermission(storageEnum);\n        const value = await chrome?.storage[storageEnum].get([key]);\n        if (!value) {\n            return fallback;\n        }\n        return deserialize(value[key]) ?? fallback;\n    };\n    const _emitChange = () => {\n        listeners.forEach(listener => listener());\n    };\n    const set = async (valueOrUpdate) => {\n        if (!initedCache) {\n            cache = await get();\n        }\n        cache = await updateCache(valueOrUpdate, cache);\n        await chrome?.storage[storageEnum].set({ [key]: serialize(cache) });\n        _emitChange();\n    };\n    const subscribe = (listener) => {\n        listeners = [...listeners, listener];\n        return () => {\n            listeners = listeners.filter(l => l !== listener);\n        };\n    };\n    const getSnapshot = () => {\n        return cache;\n    };\n    get().then(data => {\n        cache = data;\n        initedCache = true;\n        _emitChange();\n    });\n    // Listener for live updates from the browser\n    async function _updateFromStorageOnChanged(changes) {\n        // Check if the key we are listening for is in the changes object\n        if (changes[key] === undefined)\n            return;\n        const valueOrUpdate = deserialize(changes[key].newValue);\n        if (cache === valueOrUpdate)\n            return;\n        cache = await updateCache(valueOrUpdate, cache);\n        _emitChange();\n    }\n    // Register listener for live updates for our storage area\n    if (liveUpdate) {\n        chrome?.storage[storageEnum].onChanged.addListener(_updateFromStorageOnChanged);\n    }\n    return {\n        get,\n        set,\n        getSnapshot,\n        subscribe,\n    };\n}\n","import { createStorage, StorageEnum } from '../base/index.js';\nconst storage = createStorage('theme-storage-key', 'light', {\n    storageEnum: StorageEnum.Local,\n    liveUpdate: true,\n});\n// You can extend it with your own methods\nexport const exampleThemeStorage = {\n    ...storage,\n    toggle: async () => {\n        await storage.set(currentTheme => {\n            return currentTheme === 'light' ? 'dark' : 'light';\n        });\n    },\n};\n","import { createStorage, StorageEnum } from '../base/index.js';\n// 创建专注时间基础存储\nconst focusTimeBaseStorage = createStorage('focus-time-storage-key', {\n    duration: 25, // 默认25分钟\n    isActive: false,\n}, {\n    storageEnum: StorageEnum.Local,\n    liveUpdate: true,\n});\n// 扩展专注时间存储\nexport const focusStorage = {\n    ...focusTimeBaseStorage,\n    startFocus: async (duration) => {\n        const now = Date.now();\n        await focusTimeBaseStorage.set({\n            duration,\n            isActive: true,\n            startTime: now,\n            endTime: now + duration * 60 * 1000,\n        });\n    },\n    stopFocus: async () => {\n        await focusTimeBaseStorage.set(current => ({\n            ...current,\n            isActive: false,\n            startTime: undefined,\n            endTime: undefined,\n        }));\n    },\n    getRemainingTime: async () => {\n        const config = await focusTimeBaseStorage.get();\n        if (!config.isActive || !config.endTime) {\n            return 0;\n        }\n        const remaining = Math.max(0, config.endTime - Date.now());\n        return Math.floor(remaining / 1000); // 转换为秒\n    },\n};\n","import { createStorage, StorageEnum } from '../base/index.js';\n// 创建禁用URL列表基础存储\nconst blockedUrlsBaseStorage = createStorage('blocked-urls-storage-key', {\n    urls: [],\n    studyModeUrls: [],\n    studyModeSelectors: {},\n}, {\n    storageEnum: StorageEnum.Local,\n    liveUpdate: true,\n});\n// 数据迁移逻辑\nconst migrateStorageStructure = async () => {\n    try {\n        const current = await blockedUrlsBaseStorage.get();\n        // 检查是否需要迁移\n        if (!current.studyModeUrls || !current.studyModeSelectors) {\n            console.log('Migrating blocked URLs storage structure...');\n            await blockedUrlsBaseStorage.set(oldData => ({\n                urls: oldData.urls || [],\n                studyModeUrls: oldData.studyModeUrls || [],\n                studyModeSelectors: oldData.studyModeSelectors || {},\n            }));\n            console.log('Blocked URLs storage migration complete.');\n        }\n    }\n    catch (error) {\n        console.error('Error migrating blocked URLs storage:', error);\n    }\n};\n// 执行数据迁移\nmigrateStorageStructure();\n// 扩展禁用URL列表存储\nexport const blockedUrlsStorage = {\n    ...blockedUrlsBaseStorage,\n    addUrl: async (url) => {\n        await blockedUrlsBaseStorage.set(current => {\n            // 如果URL已存在，则不添加\n            if (current.urls.includes(url)) {\n                return current;\n            }\n            // 如果URL在学习模式列表中，先从学习模式列表中移除\n            const studyModeUrls = current.studyModeUrls.filter(u => u !== url);\n            return {\n                ...current,\n                urls: [...current.urls, url],\n                studyModeUrls,\n            };\n        });\n    },\n    removeUrl: async (url) => {\n        await blockedUrlsBaseStorage.set(current => ({\n            ...current,\n            urls: current.urls.filter(u => u !== url),\n        }));\n    },\n    clearUrls: async () => {\n        await blockedUrlsBaseStorage.set(current => ({\n            ...current,\n            urls: [],\n        }));\n    },\n    addStudyModeUrl: async (url) => {\n        await blockedUrlsBaseStorage.set(current => {\n            // 如果URL已存在于学习模式列表，则不添加\n            if (current.studyModeUrls.includes(url)) {\n                return current;\n            }\n            // 如果URL在完全禁用列表中，先从完全禁用列表中移除\n            const urls = current.urls.filter(u => u !== url);\n            return {\n                ...current,\n                studyModeUrls: [...current.studyModeUrls, url],\n                urls,\n            };\n        });\n    },\n    removeStudyModeUrl: async (url) => {\n        await blockedUrlsBaseStorage.set(current => ({\n            ...current,\n            studyModeUrls: current.studyModeUrls.filter(u => u !== url),\n        }));\n    },\n    toggleUrlMode: async (url, isStudyMode) => {\n        if (isStudyMode) {\n            await blockedUrlsStorage.addStudyModeUrl(url);\n        }\n        else {\n            await blockedUrlsStorage.addUrl(url);\n        }\n    },\n    addStudyModeSelector: async (url, selector) => {\n        await blockedUrlsBaseStorage.set(current => {\n            const currentSelectors = current.studyModeSelectors[url] || [];\n            // 如果选择器已存在，则不添加\n            if (currentSelectors.includes(selector)) {\n                return current;\n            }\n            return {\n                ...current,\n                studyModeSelectors: {\n                    ...current.studyModeSelectors,\n                    [url]: [...currentSelectors, selector],\n                },\n            };\n        });\n    },\n    removeStudyModeSelector: async (url, selector) => {\n        await blockedUrlsBaseStorage.set(current => {\n            const currentSelectors = current.studyModeSelectors[url] || [];\n            return {\n                ...current,\n                studyModeSelectors: {\n                    ...current.studyModeSelectors,\n                    [url]: currentSelectors.filter(s => s !== selector),\n                },\n            };\n        });\n    },\n    clearStudyModeSelectors: async (url) => {\n        await blockedUrlsBaseStorage.set(current => {\n            const { [url]: _, ...restSelectors } = current.studyModeSelectors;\n            return {\n                ...current,\n                studyModeSelectors: restSelectors,\n            };\n        });\n    },\n};\n","import { createStorage, StorageEnum } from '../base/index.js';\n// 创建通知缓存存储\nconst notificationCacheBaseStorage = createStorage('notification-cache-storage-key', {\n    isGenerating: false,\n}, {\n    storageEnum: StorageEnum.Local,\n    liveUpdate: true,\n});\n// 扩展通知缓存存储\nexport const notificationCacheStorage = {\n    ...notificationCacheBaseStorage,\n    // 保存通知内容\n    saveNotification: async (notification, expiryMinutes = 60) => {\n        const now = Date.now();\n        await notificationCacheBaseStorage.set({\n            pendingNotification: notification,\n            generatedAt: now,\n            expiresAt: now + expiryMinutes * 60 * 1000,\n            isGenerating: false,\n        });\n    },\n    // 获取通知内容（如果有效）\n    getNotification: async () => {\n        const cache = await notificationCacheBaseStorage.get();\n        // 如果没有缓存的通知，返回null\n        if (!cache.pendingNotification) {\n            return null;\n        }\n        // 如果通知已过期，清除并返回null\n        if (cache.expiresAt && cache.expiresAt < Date.now()) {\n            await notificationCacheStorage.clearNotification();\n            return null;\n        }\n        // 返回缓存的通知内容\n        return cache.pendingNotification;\n    },\n    // 清除通知缓存\n    clearNotification: async () => {\n        await notificationCacheBaseStorage.set(current => ({\n            ...current,\n            pendingNotification: undefined,\n            generatedAt: undefined,\n            expiresAt: undefined,\n            isGenerating: false,\n        }));\n    },\n    // 设置生成状态\n    setGenerating: async (isGenerating) => {\n        await notificationCacheBaseStorage.set(current => ({\n            ...current,\n            isGenerating,\n        }));\n    },\n    // 检查是否正在生成中\n    isGenerating: async () => {\n        const cache = await notificationCacheBaseStorage.get();\n        return cache.isGenerating;\n    },\n};\n","import { createStorage, StorageEnum } from '../base/index.js';\n// Define AIProvider enum here to avoid circular dependency\nexport var AIProvider;\n(function (AIProvider) {\n    AIProvider[\"DEEPSEEK\"] = \"deepseek\";\n    AIProvider[\"OPENAI\"] = \"openai\";\n})(AIProvider || (AIProvider = {}));\n// 创建AI配置存储\nconst aiConfigBaseStorage = createStorage('ai-config-storage-key', {\n    enabled: false,\n    provider: AIProvider.DEEPSEEK,\n    model: 'deepseek-chat',\n    apiKey: '',\n    preGenerateMinutes: 5, // 默认提前5分钟生成\n}, {\n    storageEnum: StorageEnum.Local,\n    liveUpdate: true,\n});\n// 扩展AI配置存储\nexport const aiConfigStorage = {\n    ...aiConfigBaseStorage,\n    // 启用/禁用AI生成\n    enableAI: async (enabled) => {\n        await aiConfigBaseStorage.set(current => ({\n            ...current,\n            enabled,\n        }));\n    },\n    // 更新API密钥\n    updateAPIKey: async (apiKey) => {\n        await aiConfigBaseStorage.set(current => ({\n            ...current,\n            apiKey,\n        }));\n    },\n    // 更新AI提供商\n    updateProvider: async (provider, model, endpoint) => {\n        await aiConfigBaseStorage.set(current => ({\n            ...current,\n            provider,\n            ...(model ? { model } : {}),\n            ...(endpoint ? { apiEndpoint: endpoint } : { apiEndpoint: undefined }),\n        }));\n    },\n    // 更新提示词\n    updatePrompts: async (systemPrompt, promptTemplate) => {\n        await aiConfigBaseStorage.set(current => ({\n            ...current,\n            ...(systemPrompt !== undefined ? { systemPrompt } : {}),\n            ...(promptTemplate !== undefined ? { promptTemplate } : {}),\n        }));\n    },\n    // 更新预生成时间\n    updatePreGenerateTime: async (minutes) => {\n        await aiConfigBaseStorage.set(current => ({\n            ...current,\n            preGenerateMinutes: Math.max(1, Math.min(30, minutes)), // 限制在1-30分钟之间\n        }));\n    },\n};\n","import { createStorage, StorageEnum } from '../base/index.js';\n// 创建声音设置存储\nconst soundSettingsBaseStorage = createStorage('sound-settings-storage-key', {\n    enabled: true, // 默认启用声音\n    volume: 0.5, // 默认音量50%\n}, {\n    storageEnum: StorageEnum.Local,\n    liveUpdate: true,\n});\n// 扩展声音设置存储\nexport const soundSettingsStorage = {\n    ...soundSettingsBaseStorage,\n    // 启用/禁用声音\n    enableSound: async (enabled) => {\n        await soundSettingsBaseStorage.set(current => ({\n            ...current,\n            enabled,\n        }));\n    },\n    // 设置音量\n    setVolume: async (volume) => {\n        // 确保音量在0-1之间\n        const clampedVolume = Math.max(0, Math.min(1, volume));\n        await soundSettingsBaseStorage.set(current => ({\n            ...current,\n            volume: clampedVolume,\n        }));\n    },\n};\n","import { createStorage, StorageEnum } from '../base/index.js';\n// 创建TTS配置存储\nconst ttsConfigBaseStorage = createStorage('tts-config-storage-key', {\n    enabled: false,\n    appid: '',\n    token: '',\n    cluster: 'volcano_tts',\n    voiceType: 'zh_male_M392_conversation_wvae_bigtts',\n    encoding: 'mp3',\n    speedRatio: 1.0,\n    uid: 'chrome_extension_user',\n}, {\n    storageEnum: StorageEnum.Local,\n    liveUpdate: true,\n});\n// 扩展TTS配置存储\nexport const ttsConfigStorage = {\n    ...ttsConfigBaseStorage,\n    // 更新配置\n    updateConfig: async (config) => {\n        await ttsConfigBaseStorage.set(current => ({\n            ...current,\n            ...config,\n        }));\n    },\n    // 检查是否已配置\n    isConfigured: async () => {\n        const config = await ttsConfigBaseStorage.get();\n        return config.enabled && config.appid.length > 0 && config.token.length > 0;\n    },\n};\n","import { createStorage, StorageEnum } from '../base/index.js';\n// 创建语音缓存存储\nconst voiceCacheBaseStorage = createStorage('voice-cache-storage-key', {}, {\n    storageEnum: StorageEnum.Local,\n    liveUpdate: true,\n});\n// 扩展语音缓存存储\nexport const voiceCacheStorage = {\n    ...voiceCacheBaseStorage,\n    // 缓存开始语音\n    cacheStartVoice: async (voiceType, audioData) => {\n        await voiceCacheBaseStorage.set(current => ({\n            ...current,\n            startVoiceCache: {\n                voiceType,\n                audioData,\n                cachedAt: Date.now(),\n            },\n        }));\n        console.log('Start voice cached for voiceType:', voiceType);\n    },\n    // 获取开始语音缓存\n    getStartVoice: async (voiceType) => {\n        const cache = await voiceCacheBaseStorage.get();\n        if (!cache.startVoiceCache) {\n            return null;\n        }\n        // 检查voiceType是否匹配\n        if (cache.startVoiceCache.voiceType !== voiceType) {\n            console.log('Start voice cache voiceType mismatch, clearing cache');\n            await voiceCacheStorage.clearStartVoice();\n            return null;\n        }\n        // 检查缓存是否过期（7天）\n        const cacheAge = Date.now() - cache.startVoiceCache.cachedAt;\n        const sevenDays = 7 * 24 * 60 * 60 * 1000;\n        if (cacheAge > sevenDays) {\n            console.log('Start voice cache expired, clearing cache');\n            await voiceCacheStorage.clearStartVoice();\n            return null;\n        }\n        console.log('Using cached start voice for voiceType:', voiceType);\n        return cache.startVoiceCache.audioData;\n    },\n    // 清除开始语音缓存\n    clearStartVoice: async () => {\n        await voiceCacheBaseStorage.set(current => ({\n            ...current,\n            startVoiceCache: undefined,\n        }));\n        console.log('Start voice cache cleared');\n    },\n    // 缓存结束语音\n    cacheEndVoice: async (voiceType, audioData) => {\n        await voiceCacheBaseStorage.set(current => ({\n            ...current,\n            endVoiceCache: {\n                voiceType,\n                audioData,\n                cachedAt: Date.now(),\n            },\n        }));\n        console.log('End voice cached for voiceType:', voiceType);\n    },\n    // 获取结束语音缓存\n    getEndVoice: async (voiceType) => {\n        const cache = await voiceCacheBaseStorage.get();\n        if (!cache.endVoiceCache) {\n            return null;\n        }\n        // 检查voiceType是否匹配\n        if (cache.endVoiceCache.voiceType !== voiceType) {\n            console.log('End voice cache voiceType mismatch, clearing cache');\n            await voiceCacheStorage.clearEndVoice();\n            return null;\n        }\n        // 检查缓存是否过期（7天）\n        const cacheAge = Date.now() - cache.endVoiceCache.cachedAt;\n        const sevenDays = 7 * 24 * 60 * 60 * 1000;\n        if (cacheAge > sevenDays) {\n            console.log('End voice cache expired, clearing cache');\n            await voiceCacheStorage.clearEndVoice();\n            return null;\n        }\n        console.log('Using cached end voice for voiceType:', voiceType);\n        return cache.endVoiceCache.audioData;\n    },\n    // 清除结束语音缓存\n    clearEndVoice: async () => {\n        await voiceCacheBaseStorage.set(current => ({\n            ...current,\n            endVoiceCache: undefined,\n        }));\n        console.log('End voice cache cleared');\n    },\n    // 清除所有语音缓存\n    clearAllVoiceCache: async () => {\n        await voiceCacheBaseStorage.set({});\n        console.log('All voice cache cleared');\n    },\n    // 检查开始语音缓存是否有效\n    isStartVoiceCacheValid: async (voiceType) => {\n        const audioData = await voiceCacheStorage.getStartVoice(voiceType);\n        return audioData !== null;\n    },\n    // 检查结束语音缓存是否有效\n    isEndVoiceCacheValid: async (voiceType) => {\n        const audioData = await voiceCacheStorage.getEndVoice(voiceType);\n        return audioData !== null;\n    },\n};\n","// 时间相关常量\nexport const TIMEOUTS = {\n  OFFSCREEN_LOAD_DELAY: 200, // offscreen document加载延迟\n  MESSAGE_TIMEOUT: 5000, // 消息发送超时时间\n  TIMER_CHECK_INTERVAL: 1000, // 定时器检查间隔\n} as const;\n\n// TTS相关常量\nexport const TTS = {\n  API_URL: 'https://openspeech.bytedance.com/api/v1/tts',\n  DEFAULT_CLUSTER: 'volcano_tts',\n  DEFAULT_VOICE_TYPE: 'zh_male_M392_conversation_wvae_bigtts',\n  DEFAULT_ENCODING: 'mp3',\n  DEFAULT_SPEED_RATIO: 1.0,\n  DEFAULT_UID: 'chrome_extension_user',\n} as const;\n\n// 音频相关常量\nexport const AUDIO = {\n  DEFAULT_VOLUME: 0.5,\n  MIN_VOLUME: 0,\n  MAX_VOLUME: 1,\n  NOTIFICATION_FILE: 'notification.mp3',\n} as const;\n\n// 专注模式相关常量\nexport const FOCUS = {\n  DEFAULT_DURATION: 25, // 默认专注时间（分钟）\n  MIN_DURATION: 1,\n  MAX_DURATION: 120,\n  BADGE_COLOR: '#E53935',\n  BADGE_TEXT: '专注',\n} as const;\n\n// AI相关常量\nexport const AI = {\n  DEFAULT_PRE_GENERATE_MINUTES: 5,\n  MIN_PRE_GENERATE_MINUTES: 1,\n  MAX_PRE_GENERATE_MINUTES: 30,\n} as const;\n\n// 消息类型常量\nexport const MESSAGE_TYPES = {\n  PLAY_NOTIFICATION_SOUND: 'PLAY_NOTIFICATION_SOUND',\n  PLAY_TTS_SOUND: 'PLAY_TTS_SOUND',\n  TEST_TTS: 'TEST_TTS',\n  PING_POPUP: 'PING_POPUP',\n  PONG_POPUP: 'PONG_POPUP',\n} as const;\n\n// 通知ID常量\nexport const NOTIFICATION_IDS = {\n  FOCUS_START: 'focus-start',\n  FOCUS_END: 'focus-end',\n} as const;\n\n// 存储键常量\nexport const STORAGE_KEYS = {\n  THEME: 'theme-storage-key',\n  FOCUS_TIME: 'focus-time-storage-key',\n  BLOCKED_URLS: 'blocked-urls-storage-key',\n  AI_CONFIG: 'ai-config-storage-key',\n  SOUND_SETTINGS: 'sound-settings-storage-key',\n  TTS_CONFIG: 'tts-config-storage-key',\n  NOTIFICATION_CACHE: 'notification-cache-storage-key',\n} as const;\n\n// 错误消息常量\nexport const ERROR_MESSAGES = {\n  TTS_NOT_CONFIGURED: 'TTS未启用或未配置',\n  TTS_GENERATION_FAILED: '语音生成失败',\n  SOUND_DISABLED: '声音已禁用',\n  MESSAGE_TIMEOUT: '消息发送超时',\n  OFFSCREEN_NOT_FOUND: 'Offscreen document未找到',\n  AUDIO_PLAY_FAILED: '音频播放失败',\n} as const;\n","import { ttsConfigStorage } from '@extension/storage';\nimport { TTS, ERROR_MESSAGES } from '../constants/index.js';\n\n// TTS API响应接口\ninterface TTSResponse {\n  reqid: string;\n  code: number;\n  operation: string;\n  message: string;\n  sequence: number;\n  data?: string; // base64编码的音频数据\n  addition?: {\n    duration: string;\n  };\n}\n\n// TTS请求接口\ninterface TTSRequest {\n  app: {\n    appid: string;\n    cluster: string;\n  };\n  user: {\n    uid: string;\n  };\n  audio: {\n    voice_type: string;\n    encoding: string;\n    speed_ratio: number;\n  };\n  request: {\n    reqid: string;\n    text: string;\n    operation: string;\n  };\n}\n\nexport class TTSService {\n  private static readonly API_URL = TTS.API_URL;\n\n  /**\n   * 生成语音并返回base64音频数据\n   */\n  static async generateSpeech(text: string): Promise<string | null> {\n    try {\n      // 获取TTS配置\n      const config = await ttsConfigStorage.get();\n\n      // 检查是否启用TTS\n      if (!config.enabled) {\n        console.log('TTS is disabled');\n        return null;\n      }\n\n      // 检查配置是否完整\n      if (!config.appid || !config.token) {\n        console.error('TTS configuration is incomplete');\n        return null;\n      }\n\n      // 生成请求ID\n      const reqid = `chrome_ext_${Date.now()}_${Math.random().toString(36).substring(2, 11)}`;\n\n      // 构建请求数据\n      const requestData: TTSRequest = {\n        app: {\n          appid: config.appid,\n          cluster: config.cluster,\n        },\n        user: {\n          uid: config.uid,\n        },\n        audio: {\n          voice_type: config.voiceType,\n          encoding: config.encoding,\n          speed_ratio: config.speedRatio,\n        },\n        request: {\n          reqid,\n          text,\n          operation: 'query',\n        },\n      };\n\n      console.log('Sending TTS request:', { reqid, text });\n\n      // 发送请求\n      const response = await fetch(TTSService.API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer; ${config.token}`,\n        },\n        body: JSON.stringify(requestData),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result: TTSResponse = await response.json();\n\n      // 检查响应状态\n      if (result.code !== 3000) {\n        throw new Error(`TTS API error: ${result.message} (code: ${result.code})`);\n      }\n\n      // 检查是否有音频数据\n      if (!result.data) {\n        throw new Error('No audio data received from TTS API');\n      }\n\n      console.log('TTS generation successful:', {\n        reqid: result.reqid,\n        duration: result.addition?.duration,\n        dataLength: result.data.length,\n      });\n\n      // 直接返回base64数据，让offscreen document处理URL创建\n      return result.data;\n    } catch (error) {\n      console.error('Error generating speech:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 测试TTS配置是否有效\n   */\n  static async testConfiguration(): Promise<boolean> {\n    try {\n      const testText = '测试语音合成';\n      const audioData = await TTSService.generateSpeech(testText);\n\n      return audioData !== null;\n    } catch (error) {\n      console.error('TTS configuration test failed:', error);\n      return false;\n    }\n  }\n}\n","import { soundSettingsStorage, ttsConfigStorage, voiceCacheStorage } from '@extension/storage';\nimport { TTSService } from '../../services/ttsService.js';\nimport { TIMEOUTS, MESSAGE_TYPES, ERROR_MESSAGES } from '../../constants/index.js';\n\nexport class AudioManager {\n  private static instance: AudioManager;\n\n  private constructor() {}\n\n  static getInstance(): AudioManager {\n    if (!AudioManager.instance) {\n      AudioManager.instance = new AudioManager();\n    }\n    return AudioManager.instance;\n  }\n\n  /**\n   * 播放TTS语音通知\n   */\n  async playTTSNotification(text: string): Promise<void> {\n    try {\n      // 获取TTS配置\n      const ttsConfig = await ttsConfigStorage.get();\n\n      // 如果TTS未启用或未配置，回退到普通音频\n      if (!ttsConfig.enabled || !(await ttsConfigStorage.isConfigured())) {\n        console.log('TTS not enabled or not configured, falling back to normal sound');\n        return await this.playNotificationSound();\n      }\n\n      // 获取声音设置\n      const soundSettings = await soundSettingsStorage.get();\n      if (!soundSettings.enabled) {\n        console.log('Notification sound is disabled');\n        return;\n      }\n\n      console.log('Generating TTS for text:', text);\n\n      // 检查是否为开始语音（固定文本，可以缓存）\n      const isStartVoice = this.isStartVoiceText(text);\n      let audioData: string | null = null;\n\n      if (isStartVoice) {\n        // 尝试从缓存获取开始语音\n        audioData = await voiceCacheStorage.getStartVoice(ttsConfig.voiceType);\n\n        if (audioData) {\n          console.log('Using cached start voice for voiceType:', ttsConfig.voiceType);\n        } else {\n          console.log('No cached start voice found, generating new one');\n          // 生成固定的开始语音（不包含时间信息）\n          const fixedStartText = '专注模式已启动，加油保持专注！';\n          audioData = await TTSService.generateSpeech(fixedStartText);\n\n          if (audioData) {\n            // 缓存生成的语音\n            await voiceCacheStorage.cacheStartVoice(ttsConfig.voiceType, audioData);\n            console.log('Start voice generated and cached for voiceType:', ttsConfig.voiceType);\n          }\n        }\n      } else {\n        // 对于其他文本（如结束语音），正常生成\n        audioData = await TTSService.generateSpeech(text);\n      }\n\n      if (!audioData) {\n        console.log('TTS generation failed, falling back to normal sound');\n        return await this.playNotificationSound();\n      }\n\n      // 使用offscreen document来播放音频\n      await this.ensureOffscreenDocument();\n\n      // 向offscreen document发送播放TTS音频的消息\n      const response = await chrome.runtime.sendMessage({\n        type: MESSAGE_TYPES.PLAY_TTS_SOUND,\n        volume: soundSettings.volume,\n        audioData: audioData,\n      });\n\n      if (response && response.success) {\n        console.log('TTS notification played successfully with volume:', soundSettings.volume);\n      } else {\n        console.error('Failed to play TTS notification:', response?.error);\n        // 如果TTS播放失败，回退到普通音频\n        await this.playNotificationSound();\n      }\n    } catch (error) {\n      console.error('Error playing TTS notification:', error);\n      // 如果出错，回退到普通音频\n      await this.playNotificationSound();\n    }\n  }\n\n  /**\n   * 播放普通通知音效\n   */\n  async playNotificationSound(): Promise<void> {\n    try {\n      // 获取声音设置\n      const soundSettings = await soundSettingsStorage.get();\n\n      // 如果声音被禁用，直接返回\n      if (!soundSettings.enabled) {\n        console.log('Notification sound is disabled');\n        return;\n      }\n\n      // 使用offscreen document来播放音频\n      await this.ensureOffscreenDocument();\n\n      // 向offscreen document发送播放音频的消息\n      const response = await chrome.runtime.sendMessage({\n        type: MESSAGE_TYPES.PLAY_NOTIFICATION_SOUND,\n        volume: soundSettings.volume,\n        audioUrl: chrome.runtime.getURL('notification.mp3'),\n      });\n\n      if (response && response.success) {\n        console.log('Notification sound played successfully with volume:', soundSettings.volume);\n      } else {\n        console.error('Failed to play notification sound:', response?.error);\n      }\n    } catch (error) {\n      console.error('Error playing notification sound:', error);\n    }\n  }\n\n  /**\n   * 测试TTS功能\n   */\n  async testTTS(text: string): Promise<{ success: boolean; error?: string }> {\n    try {\n      // 检查TTS配置\n      const ttsConfig = await ttsConfigStorage.get();\n      if (!ttsConfig.enabled || !(await ttsConfigStorage.isConfigured())) {\n        return { success: false, error: ERROR_MESSAGES.TTS_NOT_CONFIGURED };\n      }\n\n      // 生成语音\n      const audioData = await TTSService.generateSpeech(text);\n\n      if (!audioData) {\n        return { success: false, error: ERROR_MESSAGES.TTS_GENERATION_FAILED };\n      }\n\n      // 获取声音设置\n      const soundSettings = await soundSettingsStorage.get();\n      if (!soundSettings.enabled) {\n        return { success: false, error: ERROR_MESSAGES.SOUND_DISABLED };\n      }\n\n      // 确保offscreen document存在\n      await this.ensureOffscreenDocument();\n\n      // 等待一小段时间确保offscreen document完全加载\n      await new Promise(resolve => setTimeout(resolve, TIMEOUTS.OFFSCREEN_LOAD_DELAY));\n\n      try {\n        // 使用Promise包装消息发送，设置超时\n        const response = await new Promise((resolve, reject) => {\n          const timeout = setTimeout(() => {\n            reject(new Error(ERROR_MESSAGES.MESSAGE_TIMEOUT));\n          }, TIMEOUTS.MESSAGE_TIMEOUT);\n\n          chrome.runtime.sendMessage(\n            {\n              type: MESSAGE_TYPES.PLAY_TTS_SOUND,\n              volume: soundSettings.volume,\n              audioData: audioData,\n            },\n            response => {\n              clearTimeout(timeout);\n              if (chrome.runtime.lastError) {\n                reject(new Error(chrome.runtime.lastError.message));\n              } else {\n                resolve(response);\n              }\n            },\n          );\n        });\n\n        const typedResponse = response as { success: boolean; error?: string };\n        if (typedResponse && typedResponse.success) {\n          return { success: true };\n        } else {\n          return { success: false, error: typedResponse?.error || '播放失败' };\n        }\n      } catch (messageError) {\n        console.error('Message sending error:', messageError);\n        return { success: false, error: '无法与音频播放器通信: ' + (messageError as Error).message };\n      }\n    } catch (error) {\n      console.error('TTS test error:', error);\n      return { success: false, error: (error as Error).message };\n    }\n  }\n\n  /**\n   * 检查是否为开始语音文本\n   */\n  private isStartVoiceText(text: string): boolean {\n    // 检查文本是否包含开始语音的关键词\n    return text.includes('专注模式已启动') || text.includes('开始专注') || text.includes('加油，保持专注');\n  }\n\n  /**\n   * 清除语音缓存（当voiceType改变时调用）\n   */\n  async clearVoiceCacheOnVoiceTypeChange(oldVoiceType: string, newVoiceType: string): Promise<void> {\n    if (oldVoiceType !== newVoiceType) {\n      console.log('VoiceType changed from', oldVoiceType, 'to', newVoiceType, ', clearing voice cache');\n      await voiceCacheStorage.clearAllVoiceCache();\n    }\n  }\n\n  /**\n   * 确保offscreen document存在\n   */\n  private async ensureOffscreenDocument(): Promise<void> {\n    try {\n      // 检查是否已经有offscreen document\n      try {\n        const existingContexts = await chrome.runtime.getContexts({\n          contextTypes: [chrome.runtime.ContextType.OFFSCREEN_DOCUMENT],\n          documentUrls: [chrome.runtime.getURL('offscreen.html')],\n        });\n\n        if (existingContexts.length > 0) {\n          return; // 已经存在\n        }\n      } catch (_contextError) {\n        // 如果getContexts不可用，继续创建offscreen document\n        console.log('getContexts not available, proceeding to create offscreen document');\n      }\n\n      // 创建offscreen document\n      await chrome.offscreen.createDocument({\n        url: chrome.runtime.getURL('offscreen.html'),\n        reasons: [chrome.offscreen.Reason.AUDIO_PLAYBACK],\n        justification: 'Playing notification sounds for focus timer',\n      });\n\n      console.log('Offscreen document created for audio playback');\n    } catch (error) {\n      console.error('Error creating offscreen document:', error);\n    }\n  }\n}\n","/**\n * 通知生成器服务\n *\n * 注意：此服务已被弃用。AI通知生成逻辑已统一移至 Background Script 的 NotificationManager 中。\n * 保留此文件是为了向后兼容和类型定义，但主要功能已不再使用。\n */\n\n// 备用消息，当AI生成失败时使用\nexport const FALLBACK_MESSAGES = [\n  '休息一下吧！你已经专注工作了一段时间。',\n  '该活动一下了！站起来伸展一下身体吧。',\n  '休息是为了更好的工作，现在是放松的时候了。',\n  '你的大脑需要休息，去喝杯水吧！',\n  '专注时间结束，给自己一个小奖励吧！',\n  '太棒了！你完成了一个专注周期，现在享受一下休息时光。',\n  '记得休息是工作的一部分，现在放松一下吧。',\n  '眨眨眼睛，活动一下，让身体放松一下吧！',\n  '专注时间已结束，深呼吸，放松一下。',\n  '恭喜完成专注时间！现在是休息和恢复的时候了。',\n];\n\n/**\n * 获取随机备用消息\n * @returns 随机备用消息\n */\nexport function getRandomFallbackMessage(): string {\n  const index = Math.floor(Math.random() * FALLBACK_MESSAGES.length);\n  return FALLBACK_MESSAGES[index];\n}\n\n/**\n * 通知生成器类 - 已弃用，保留用于向后兼容\n * @deprecated 请使用 Background Script 中的 NotificationManager\n */\nexport class NotificationGenerator {\n  /**\n   * @deprecated 此类已弃用，功能已移至 Background Script\n   */\n  constructor() {\n    console.warn('NotificationGenerator is deprecated. Use Background Script NotificationManager instead.');\n  }\n\n  /**\n   * @deprecated 此方法已弃用\n   */\n  async generateNotification(duration: number): Promise<string> {\n    console.warn('generateNotification is deprecated');\n    return getRandomFallbackMessage();\n  }\n\n  /**\n   * @deprecated 此方法已弃用\n   */\n  async getNotification(duration: number): Promise<string> {\n    console.warn('getNotification is deprecated');\n    return getRandomFallbackMessage();\n  }\n}\n\n/**\n * @deprecated 此函数已弃用\n */\nexport function createNotificationGenerator(): NotificationGenerator {\n  console.warn('createNotificationGenerator is deprecated');\n  return new NotificationGenerator();\n}\n","import { aiConfigStorage, notificationCacheStorage, focusStorage } from '@extension/storage';\nimport { AI } from '../../constants/index.js';\nimport { getRandomFallbackMessage } from '@extension/shared/lib/services/notificationGenerator.js';\n\nexport class NotificationManager {\n  private static instance: NotificationManager;\n\n  private constructor() {}\n\n  static getInstance(): NotificationManager {\n    if (!NotificationManager.instance) {\n      NotificationManager.instance = new NotificationManager();\n    }\n    return NotificationManager.instance;\n  }\n\n  /**\n   * 获取专注结束通知消息\n   */\n  async getEndNotification(): Promise<string> {\n    try {\n      const aiConfig = await aiConfigStorage.get();\n\n      if (!aiConfig.enabled) {\n        return this.getDefaultEndMessage();\n      }\n\n      // 尝试从缓存获取AI生成的通知\n      const cachedNotification = await notificationCacheStorage.getNotification();\n\n      if (cachedNotification) {\n        console.log('Using cached AI notification');\n        return cachedNotification;\n      }\n\n      // 如果没有缓存或缓存过期，生成新的通知\n      return await this.generateAINotification();\n    } catch (error) {\n      console.error('Error getting end notification:', error);\n      return this.getDefaultEndMessage();\n    }\n  }\n\n  /**\n   * 预生成AI通知\n   */\n  async preGenerateNotification(duration: number): Promise<void> {\n    try {\n      const aiConfig = await aiConfigStorage.get();\n\n      if (!aiConfig.enabled) {\n        return;\n      }\n\n      // 在专注时间结束前几分钟预生成通知\n      const preGenerateTime = Math.max(\n        AI.MIN_PRE_GENERATE_MINUTES,\n        Math.min(AI.MAX_PRE_GENERATE_MINUTES, duration - AI.DEFAULT_PRE_GENERATE_MINUTES),\n      );\n\n      setTimeout(\n        async () => {\n          try {\n            await this.generateAINotification();\n            console.log('AI notification pre-generated successfully');\n          } catch (error) {\n            console.error('Error pre-generating AI notification:', error);\n          }\n        },\n        preGenerateTime * 60 * 1000,\n      );\n    } catch (error) {\n      console.error('Error setting up notification pre-generation:', error);\n    }\n  }\n\n  /**\n   * 生成AI通知\n   */\n  private async generateAINotification(): Promise<string> {\n    try {\n      const aiConfig = await aiConfigStorage.get();\n\n      if (!aiConfig.apiKey || !aiConfig.provider) {\n        console.log('AI configuration incomplete, using default message');\n        return this.getDefaultEndMessage();\n      }\n\n      // 构建AI请求\n      const prompt = await this.buildNotificationPrompt();\n      const aiResponse = await this.callAIService(aiConfig, prompt);\n\n      if (aiResponse) {\n        // 缓存AI生成的通知\n        await notificationCacheStorage.saveNotification(aiResponse);\n\n        console.log('AI notification generated and cached');\n        return aiResponse;\n      }\n\n      return this.getDefaultEndMessage();\n    } catch (error) {\n      console.error('Error generating AI notification:', error);\n      return this.getDefaultEndMessage();\n    }\n  }\n\n  /**\n   * 构建AI提示词\n   */\n  private async buildNotificationPrompt(): Promise<string> {\n    const currentTime = new Date().toLocaleTimeString('zh-CN', {\n      hour: '2-digit',\n      minute: '2-digit',\n    });\n\n    // 获取专注时长\n    const focusConfig = await focusStorage.get();\n    const duration = focusConfig.duration;\n\n    // 获取AI配置中的自定义提示词模板\n    const aiConfig = await aiConfigStorage.get();\n    const promptTemplate =\n      aiConfig.promptTemplate ||\n      `现在是${currentTime}，用户刚刚完成了{duration}分钟的专注时间段。请生成一条温暖、鼓励的休息提醒，内容要：\n1. 简洁明了（不超过50字）\n2. 积极正面，给用户成就感\n3. 建议适当的休息活动\n4. 语气亲切自然, 邻家女孩口吻或可爱学妹口吻, 带有情感色彩\n\n请直接返回通知内容，不要包含其他解释。`;\n\n    return promptTemplate.replace('{duration}', duration.toString());\n  }\n\n  /**\n   * 调用AI服务\n   */\n  private async callAIService(aiConfig: any, prompt: string): Promise<string | null> {\n    try {\n      // 获取API端点\n      const apiEndpoint = this.getAPIEndpoint(aiConfig.provider);\n\n      // 准备请求体\n      const requestBody = this.prepareRequestBody(aiConfig, prompt);\n\n      // 设置超时\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 10000); // 10秒超时\n\n      // 发送请求\n      const response = await fetch(apiEndpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${aiConfig.apiKey}`,\n        },\n        body: JSON.stringify(requestBody),\n        signal: controller.signal,\n      });\n\n      // 清除超时\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        throw new Error(`AI API error: ${response.status} ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      const text = data.choices[0].message.content;\n\n      // 格式化通知\n      const notification = text\n        .trim()\n        .replace(/^[\"']|[\"']$/g, '')\n        .replace(/\\n+/g, ' ')\n        .trim();\n\n      // 如果消息太长，截断它\n      if (notification.length > 100) {\n        return notification.substring(0, 97) + '...';\n      }\n\n      return notification;\n    } catch (error) {\n      console.error('Error calling AI service:', error);\n      return null;\n    }\n  }\n\n  /**\n   * 获取API端点\n   */\n  private getAPIEndpoint(provider: string): string {\n    const endpoints: Record<string, string> = {\n      deepseek: 'https://api.deepseek.com/v1/chat/completions',\n      openai: 'https://api.openai.com/v1/chat/completions',\n    };\n    return endpoints[provider] || endpoints['deepseek'];\n  }\n\n  /**\n   * 准备请求体\n   */\n  private prepareRequestBody(aiConfig: any, prompt: string): object {\n    const defaultSystemPrompt = `你是一个友好、积极的助手，负责在用户专注工作一段时间后提醒他们休息。\n你的消息应该：\n1. 简短（不超过50个字）\n2. 友好且鼓励性的\n3. 有时可以幽默或有趣\n4. 提醒用户休息的重要性\n5. 偶尔可以建议简单的伸展运动或放松技巧\n6. 语气亲切自然, 邻家女孩口吻或可爱学妹口吻, 带有情感色彩\n7. 不要重复相同的内容\n8. 不要使用过于正式或机械的语言\n `;\n\n    const systemPrompt = aiConfig.systemPrompt || defaultSystemPrompt;\n\n    return {\n      model: aiConfig.model || 'deepseek-chat',\n      messages: [\n        { role: 'system', content: systemPrompt },\n        { role: 'user', content: prompt },\n      ],\n      temperature: 0.8,\n      max_tokens: 100,\n    };\n  }\n\n  /**\n   * 获取默认结束消息\n   */\n  private getDefaultEndMessage(): string {\n    return getRandomFallbackMessage();\n  }\n\n  /**\n   * 清除通知缓存\n   */\n  async clearNotificationCache(): Promise<void> {\n    try {\n      await notificationCacheStorage.clearNotification();\n      console.log('Notification cache cleared');\n    } catch (error) {\n      console.error('Error clearing notification cache:', error);\n    }\n  }\n}\n","/**\n * 网站特定处理模块\n */\n\n/**\n * 网站处理器接口\n */\nexport interface SiteHandler {\n  domain: string;\n  getSelectors(): string[];\n  getCustomHandler?(tabId: number): (selectors: string[]) => void;\n}\n\n/**\n * Bilibili网站处理器\n */\nexport const bilibiliHandler: SiteHandler = {\n  domain: 'bilibili.com',\n  getSelectors() {\n    return ['#nav-searchform', '.center-search__bar'];\n  },\n  getCustomHandler(_tabId: number) {\n    return function (selectors: string[]) {\n      const message = '已为您屏蔽搜索功能，专注于观看学习内容';\n      const backgroundColor = 'rgba(255, 105, 180, 0.8)';\n\n      try {\n        console.log('🎯 [Site Handler] Script execution started!');\n        console.log('🎯 [Site Handler] Message:', message);\n        console.log('🎯 [Site Handler] Background color:', backgroundColor);\n\n        // 创建专注提醒小卡片\n        function createFocusReminder(msg: string, bgColor: string) {\n          const existingReminder = document.querySelector('[data-focus-reminder=\"true\"]');\n          if (existingReminder) {\n            console.log('🎯 [Site Handler] Focus reminder already exists');\n            return;\n          }\n\n          const focusReminder = document.createElement('div');\n          focusReminder.setAttribute('data-focus-reminder', 'true');\n          focusReminder.style.position = 'fixed';\n          focusReminder.style.top = '70px';\n          focusReminder.style.right = '10px';\n          focusReminder.style.backgroundColor = bgColor;\n          focusReminder.style.color = 'white';\n          focusReminder.style.padding = '12px 16px';\n          focusReminder.style.borderRadius = '8px';\n          focusReminder.style.zIndex = '9999999';\n          focusReminder.style.fontSize = '14px';\n          focusReminder.style.fontFamily = 'Arial, sans-serif';\n          focusReminder.style.boxShadow = '0 2px 10px rgba(0, 0, 0, 0.2)';\n          focusReminder.style.width = '200px';\n          focusReminder.style.textAlign = 'center';\n\n          const title = document.createElement('div');\n          title.textContent = '专注提醒';\n          title.style.fontWeight = 'bold';\n          title.style.fontSize = '16px';\n          title.style.marginBottom = '8px';\n          focusReminder.appendChild(title);\n\n          const content = document.createElement('div');\n          content.textContent = msg;\n          focusReminder.appendChild(content);\n\n          document.body.appendChild(focusReminder);\n          console.log('🎯 [Site Handler] Focus reminder card created');\n\n          setTimeout(() => {\n            focusReminder.style.transition = 'opacity 1s';\n            focusReminder.style.opacity = '0';\n            setTimeout(() => {\n              if (document.body.contains(focusReminder)) {\n                document.body.removeChild(focusReminder);\n              }\n            }, 1000);\n          }, 3000);\n        }\n\n        // 处理选择器\n        function applySelectors(sels: string[]) {\n          sels.forEach(selector => {\n            try {\n              const elements = document.querySelectorAll(selector);\n              elements.forEach(element => {\n                if (element instanceof HTMLElement) {\n                  element.style.display = 'none';\n                  element.dataset.studyModeDisabled = 'true';\n                }\n              });\n              console.log('🎯 [Site Handler] Disabled ' + elements.length + ' elements with selector: ' + selector);\n            } catch (error) {\n              console.error('🚨 [Site Handler] Error with selector ' + selector + ':', error);\n            }\n          });\n\n          const observer = new MutationObserver(mutations => {\n            let shouldReapply = false;\n            mutations.forEach(mutation => {\n              if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {\n                shouldReapply = true;\n              }\n            });\n\n            if (shouldReapply) {\n              sels.forEach(selector => {\n                try {\n                  const elements = document.querySelectorAll(selector);\n                  elements.forEach(element => {\n                    if (element instanceof HTMLElement && !element.dataset.studyModeDisabled) {\n                      element.style.display = 'none';\n                      element.dataset.studyModeDisabled = 'true';\n                    }\n                  });\n                } catch (error) {\n                  console.error('🚨 [Site Handler] Mutation observer error:', error);\n                }\n              });\n            }\n          });\n\n          observer.observe(document.documentElement, {\n            childList: true,\n            subtree: true,\n          });\n\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (window as any).__studyModeObserver = observer;\n        }\n\n        // 执行处理\n        createFocusReminder(message, backgroundColor);\n        applySelectors(selectors);\n\n        console.log('🎯 [Site Handler] Script execution completed successfully!');\n      } catch (error) {\n        console.error('🚨 [Site Handler] Error in script execution:', error);\n\n        // 降级处理\n        try {\n          selectors.forEach(selector => {\n            const elements = document.querySelectorAll(selector);\n            elements.forEach(element => {\n              if (element instanceof HTMLElement) {\n                element.style.display = 'none';\n              }\n            });\n          });\n          console.log('🎯 [Site Handler] Fallback CSS hiding applied');\n        } catch (fallbackError) {\n          console.error('🚨 [Site Handler] Fallback also failed:', fallbackError);\n        }\n      }\n    };\n  },\n};\n\n/**\n * 百度网站处理器\n */\nexport const baiduHandler: SiteHandler = {\n  domain: 'baidu.com',\n  getSelectors() {\n    return ['#s-hotsearch-wrapper', '#con-ceiling-wrapper'];\n  },\n  getCustomHandler(_tabId: number) {\n    return function (selectors: string[]) {\n      const message = '已为您屏蔽热搜和顶部导航，专注于当前任务';\n      const backgroundColor = 'rgba(0, 128, 0, 0.8)';\n\n      try {\n        console.log('🎯 [Site Handler] Script execution started!');\n        console.log('🎯 [Site Handler] Message:', message);\n        console.log('🎯 [Site Handler] Background color:', backgroundColor);\n\n        // 创建专注提醒小卡片\n        function createFocusReminder(msg: string, bgColor: string) {\n          const existingReminder = document.querySelector('[data-focus-reminder=\"true\"]');\n          if (existingReminder) {\n            console.log('🎯 [Site Handler] Focus reminder already exists');\n            return;\n          }\n\n          const focusReminder = document.createElement('div');\n          focusReminder.setAttribute('data-focus-reminder', 'true');\n          focusReminder.style.position = 'fixed';\n          focusReminder.style.top = '70px';\n          focusReminder.style.right = '10px';\n          focusReminder.style.backgroundColor = bgColor;\n          focusReminder.style.color = 'white';\n          focusReminder.style.padding = '12px 16px';\n          focusReminder.style.borderRadius = '8px';\n          focusReminder.style.zIndex = '9999999';\n          focusReminder.style.fontSize = '14px';\n          focusReminder.style.fontFamily = 'Arial, sans-serif';\n          focusReminder.style.boxShadow = '0 2px 10px rgba(0, 0, 0, 0.2)';\n          focusReminder.style.width = '200px';\n          focusReminder.style.textAlign = 'center';\n\n          const title = document.createElement('div');\n          title.textContent = '专注提醒';\n          title.style.fontWeight = 'bold';\n          title.style.fontSize = '16px';\n          title.style.marginBottom = '8px';\n          focusReminder.appendChild(title);\n\n          const content = document.createElement('div');\n          content.textContent = msg;\n          focusReminder.appendChild(content);\n\n          document.body.appendChild(focusReminder);\n          console.log('🎯 [Site Handler] Focus reminder card created');\n\n          setTimeout(() => {\n            focusReminder.style.transition = 'opacity 1s';\n            focusReminder.style.opacity = '0';\n            setTimeout(() => {\n              if (document.body.contains(focusReminder)) {\n                document.body.removeChild(focusReminder);\n              }\n            }, 1000);\n          }, 3000);\n        }\n\n        // 处理选择器\n        function applySelectors(sels: string[]) {\n          sels.forEach(selector => {\n            try {\n              const elements = document.querySelectorAll(selector);\n              elements.forEach(element => {\n                if (element instanceof HTMLElement) {\n                  element.style.display = 'none';\n                  element.dataset.studyModeDisabled = 'true';\n                }\n              });\n              console.log('🎯 [Site Handler] Disabled ' + elements.length + ' elements with selector: ' + selector);\n            } catch (error) {\n              console.error('🚨 [Site Handler] Error with selector ' + selector + ':', error);\n            }\n          });\n\n          const observer = new MutationObserver(mutations => {\n            let shouldReapply = false;\n            mutations.forEach(mutation => {\n              if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {\n                shouldReapply = true;\n              }\n            });\n\n            if (shouldReapply) {\n              sels.forEach(selector => {\n                try {\n                  const elements = document.querySelectorAll(selector);\n                  elements.forEach(element => {\n                    if (element instanceof HTMLElement && !element.dataset.studyModeDisabled) {\n                      element.style.display = 'none';\n                      element.dataset.studyModeDisabled = 'true';\n                    }\n                  });\n                } catch (error) {\n                  console.error('🚨 [Site Handler] Mutation observer error:', error);\n                }\n              });\n            }\n          });\n\n          observer.observe(document.documentElement, {\n            childList: true,\n            subtree: true,\n          });\n\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (window as any).__studyModeObserver = observer;\n        }\n\n        // 执行处理\n        createFocusReminder(message, backgroundColor);\n        applySelectors(selectors);\n\n        console.log('🎯 [Site Handler] Script execution completed successfully!');\n      } catch (error) {\n        console.error('🚨 [Site Handler] Error in script execution:', error);\n\n        // 降级处理\n        try {\n          selectors.forEach(selector => {\n            const elements = document.querySelectorAll(selector);\n            elements.forEach(element => {\n              if (element instanceof HTMLElement) {\n                element.style.display = 'none';\n              }\n            });\n          });\n          console.log('🎯 [Site Handler] Fallback CSS hiding applied');\n        } catch (fallbackError) {\n          console.error('🚨 [Site Handler] Fallback also failed:', fallbackError);\n        }\n      }\n    };\n  },\n};\n\n/**\n * 知乎网站处理器\n */\nexport const zhihuHandler: SiteHandler = {\n  domain: 'zhihu.com',\n  getSelectors() {\n    return ['.Topstory'];\n  },\n  getCustomHandler(_tabId: number) {\n    return function (selectors: string[]) {\n      const message = '已为您屏蔽热门话题推荐，专注于学习和阅读';\n      const backgroundColor = 'rgba(0, 123, 255, 0.8)';\n\n      try {\n        console.log('🎯 [Site Handler] Script execution started!');\n        console.log('🎯 [Site Handler] Message:', message);\n        console.log('🎯 [Site Handler] Background color:', backgroundColor);\n\n        // 创建专注提醒小卡片\n        function createFocusReminder(msg: string, bgColor: string) {\n          const existingReminder = document.querySelector('[data-focus-reminder=\"true\"]');\n          if (existingReminder) {\n            console.log('🎯 [Site Handler] Focus reminder already exists');\n            return;\n          }\n\n          const focusReminder = document.createElement('div');\n          focusReminder.setAttribute('data-focus-reminder', 'true');\n          focusReminder.style.position = 'fixed';\n          focusReminder.style.top = '70px';\n          focusReminder.style.right = '10px';\n          focusReminder.style.backgroundColor = bgColor;\n          focusReminder.style.color = 'white';\n          focusReminder.style.padding = '12px 16px';\n          focusReminder.style.borderRadius = '8px';\n          focusReminder.style.zIndex = '9999999';\n          focusReminder.style.fontSize = '14px';\n          focusReminder.style.fontFamily = 'Arial, sans-serif';\n          focusReminder.style.boxShadow = '0 2px 10px rgba(0, 0, 0, 0.2)';\n          focusReminder.style.width = '200px';\n          focusReminder.style.textAlign = 'center';\n\n          const title = document.createElement('div');\n          title.textContent = '专注提醒';\n          title.style.fontWeight = 'bold';\n          title.style.fontSize = '16px';\n          title.style.marginBottom = '8px';\n          focusReminder.appendChild(title);\n\n          const content = document.createElement('div');\n          content.textContent = msg;\n          focusReminder.appendChild(content);\n\n          document.body.appendChild(focusReminder);\n          console.log('🎯 [Site Handler] Focus reminder card created');\n\n          setTimeout(() => {\n            focusReminder.style.transition = 'opacity 1s';\n            focusReminder.style.opacity = '0';\n            setTimeout(() => {\n              if (document.body.contains(focusReminder)) {\n                document.body.removeChild(focusReminder);\n              }\n            }, 1000);\n          }, 3000);\n        }\n\n        // 处理选择器\n        function applySelectors(sels: string[]) {\n          sels.forEach(selector => {\n            try {\n              const elements = document.querySelectorAll(selector);\n              elements.forEach(element => {\n                if (element instanceof HTMLElement) {\n                  element.style.display = 'none';\n                  element.dataset.studyModeDisabled = 'true';\n                }\n              });\n              console.log('🎯 [Site Handler] Disabled ' + elements.length + ' elements with selector: ' + selector);\n            } catch (error) {\n              console.error('🚨 [Site Handler] Error with selector ' + selector + ':', error);\n            }\n          });\n\n          const observer = new MutationObserver(mutations => {\n            let shouldReapply = false;\n            mutations.forEach(mutation => {\n              if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {\n                shouldReapply = true;\n              }\n            });\n\n            if (shouldReapply) {\n              sels.forEach(selector => {\n                try {\n                  const elements = document.querySelectorAll(selector);\n                  elements.forEach(element => {\n                    if (element instanceof HTMLElement && !element.dataset.studyModeDisabled) {\n                      element.style.display = 'none';\n                      element.dataset.studyModeDisabled = 'true';\n                    }\n                  });\n                } catch (error) {\n                  console.error('🚨 [Site Handler] Mutation observer error:', error);\n                }\n              });\n            }\n          });\n\n          observer.observe(document.documentElement, {\n            childList: true,\n            subtree: true,\n          });\n\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (window as any).__studyModeObserver = observer;\n        }\n\n        // 执行处理\n        createFocusReminder(message, backgroundColor);\n        applySelectors(selectors);\n\n        console.log('🎯 [Site Handler] Script execution completed successfully!');\n      } catch (error) {\n        console.error('🚨 [Site Handler] Error in script execution:', error);\n\n        // 降级处理\n        try {\n          selectors.forEach(selector => {\n            const elements = document.querySelectorAll(selector);\n            elements.forEach(element => {\n              if (element instanceof HTMLElement) {\n                element.style.display = 'none';\n              }\n            });\n          });\n          console.log('🎯 [Site Handler] Fallback CSS hiding applied');\n        } catch (fallbackError) {\n          console.error('🚨 [Site Handler] Fallback also failed:', fallbackError);\n        }\n      }\n    };\n  },\n};\n\n/**\n * 所有网站处理器的集合\n */\nexport const siteHandlers: SiteHandler[] = [bilibiliHandler, baiduHandler, zhihuHandler];\n\n/**\n * 根据URL获取匹配的网站处理器\n */\nexport function getSiteHandler(url: string): SiteHandler | undefined {\n  try {\n    const urlObj = new URL(url);\n    const hostname = urlObj.hostname;\n\n    console.log('getSiteHandler: Checking URL:', url);\n    console.log('getSiteHandler: Hostname:', hostname);\n\n    const handler = siteHandlers.find(handler => {\n      // 精确匹配\n      if (hostname === handler.domain) {\n        return true;\n      }\n\n      // 子域名匹配 (www.baidu.com 匹配 baidu.com)\n      if (hostname.endsWith('.' + handler.domain)) {\n        return true;\n      }\n\n      // 移除 www 前缀后匹配\n      const hostnameWithoutWww = hostname.startsWith('www.') ? hostname.substring(4) : hostname;\n      if (hostnameWithoutWww === handler.domain) {\n        return true;\n      }\n\n      return false;\n    });\n\n    console.log('getSiteHandler: Found handler:', handler?.domain || 'none');\n    return handler;\n  } catch (error) {\n    console.error('getSiteHandler: Error:', error);\n    return undefined;\n  }\n}\n","import { blockedUrlsStorage, focusStorage } from '@extension/storage';\nimport { getSiteHandler, type SiteHandler, siteHandlers } from '../site-handlers.js';\n\nexport class UrlBlocker {\n  private static instance: UrlBlocker;\n\n  private constructor() {}\n\n  static getInstance(): UrlBlocker {\n    if (!UrlBlocker.instance) {\n      UrlBlocker.instance = new UrlBlocker();\n    }\n    return UrlBlocker.instance;\n  }\n\n  /**\n   * 检查并处理标签页URL\n   */\n  async checkTabUrl(tabId: number, url: string): Promise<void> {\n    try {\n      console.log('UrlBlocker: Checking tab URL:', url);\n\n      // 获取专注状态\n      const focusConfig = await focusStorage.get();\n      console.log('UrlBlocker: Focus config:', focusConfig);\n\n      if (!focusConfig.isActive) {\n        console.log('UrlBlocker: Focus mode not active, skipping URL check');\n        return; // 非专注模式下不进行URL检查\n      }\n\n      // 获取阻止的URL列表\n      const blockedConfig = await blockedUrlsStorage.get();\n      console.log('UrlBlocker: Blocked config:', blockedConfig);\n\n      // 检查是否为完全阻止的URL\n      const isBlocked = this.isUrlBlocked(url, blockedConfig.urls);\n      console.log('UrlBlocker: Is blocked?', isBlocked);\n\n      // 如果是完全阻止的URL，显示警告页面\n      if (isBlocked) {\n        console.log('UrlBlocker: Blocking URL:', url);\n        await this.showBlockedWarning(tabId, url);\n        return; // 完全阻止的URL不再继续处理....--------stop\n      }\n\n      // 检查是否为学习模式URL\n      const isStudyMode = this.isUrlBlocked(url, blockedConfig.studyModeUrls);\n      console.log('UrlBlocker: Is study mode?', isStudyMode);\n\n      if (isStudyMode) {\n        console.log('UrlBlocker: Applying study mode to URL:', url);\n        await this.handleStudyModeUrl(tabId, url, blockedConfig.studyModeSelectors);\n        return;\n      }\n\n      console.log('UrlBlocker: URL is allowed:', url);\n    } catch (error) {\n      console.error('Error checking tab URL:', error);\n    }\n  }\n\n  /**\n   * 检查URL是否被阻止\n   */\n  private isUrlBlocked(url: string, blockedUrls: string[]): boolean {\n    try {\n      const urlObj = new URL(url);\n      const domain = urlObj.hostname;\n\n      console.log('UrlBlocker: Checking URL:', url);\n      console.log('UrlBlocker: Domain:', domain);\n      console.log('UrlBlocker: Blocked URLs list:', blockedUrls);\n\n      const isBlocked = blockedUrls.some(blockedUrl => {\n        // 清理阻止的URL，移除协议前缀\n        let cleanBlockedUrl = blockedUrl.trim();\n\n        // 如果包含协议，提取域名\n        if (cleanBlockedUrl.startsWith('http://') || cleanBlockedUrl.startsWith('https://')) {\n          try {\n            cleanBlockedUrl = new URL(cleanBlockedUrl).hostname;\n          } catch {\n            // 如果解析失败，尝试手动提取\n            cleanBlockedUrl = cleanBlockedUrl.replace(/^https?:\\/\\//, '').split('/')[0];\n          }\n        }\n\n        console.log('UrlBlocker: Comparing with cleaned URL:', cleanBlockedUrl);\n\n        // 支持通配符域名匹配\n        if (cleanBlockedUrl.startsWith('*.')) {\n          const wildcardDomain = cleanBlockedUrl.substring(2);\n          const matches = domain.endsWith(wildcardDomain);\n          console.log('UrlBlocker: Wildcard match result:', matches);\n          return matches;\n        }\n\n        // 支持完整URL匹配（原始URL包含路径的情况）\n        if (blockedUrl.includes('/') && !blockedUrl.startsWith('http')) {\n          const matches = url.includes(blockedUrl);\n          console.log('UrlBlocker: Full URL match result:', matches);\n          return matches;\n        }\n\n        // 域名匹配逻辑\n        // 1. 精确匹配\n        const exactMatch = domain === cleanBlockedUrl;\n\n        // 2. 子域名匹配 (www.example.com 匹配 example.com)\n        const subdomainMatch = domain.endsWith('.' + cleanBlockedUrl);\n\n        // 3. 父域名匹配 (example.com 匹配 www.example.com)\n        const parentDomainMatch = cleanBlockedUrl.endsWith('.' + domain);\n\n        // 4. 移除 www 前缀后的匹配\n        const domainWithoutWww = domain.startsWith('www.') ? domain.substring(4) : domain;\n        const cleanBlockedUrlWithoutWww = cleanBlockedUrl.startsWith('www.')\n          ? cleanBlockedUrl.substring(4)\n          : cleanBlockedUrl;\n        const wwwMatch = domainWithoutWww === cleanBlockedUrlWithoutWww;\n\n        const matches = exactMatch || subdomainMatch || parentDomainMatch || wwwMatch;\n\n        console.log('UrlBlocker: Domain match result:', {\n          domain,\n          cleanBlockedUrl,\n          domainWithoutWww,\n          cleanBlockedUrlWithoutWww,\n          exactMatch,\n          subdomainMatch,\n          parentDomainMatch,\n          wwwMatch,\n          finalResult: matches,\n        });\n\n        return matches;\n      });\n\n      console.log('UrlBlocker: Final blocking result:', isBlocked);\n      return isBlocked;\n    } catch (error) {\n      console.error('Error checking if URL is blocked:', error);\n      return false;\n    }\n  }\n\n  /**\n   * 显示阻止警告页面\n   */\n  private async showBlockedWarning(tabId: number, url: string): Promise<void> {\n    try {\n      const warningUrl = chrome.runtime.getURL('blocked.html') + '?url=' + encodeURIComponent(url);\n      await chrome.tabs.update(tabId, { url: warningUrl });\n      console.log('Blocked URL redirected to warning page:', url);\n    } catch (error) {\n      console.error('Error showing blocked warning:', error);\n    }\n  }\n\n  /**\n   * 处理学习模式URL\n   */\n  private async handleStudyModeUrl(\n    tabId: number,\n    url: string,\n    studyModeSelectors: Record<string, string[]>,\n  ): Promise<void> {\n    try {\n      const urlObj = new URL(url);\n      const domain = urlObj.hostname;\n\n      console.log('UrlBlocker: Handling study mode for URL:', url);\n      console.log('UrlBlocker: Domain:', domain);\n\n      // 首先检查是否有预设的网站处理器\n      const siteHandler = getSiteHandler(url);\n\n      if (siteHandler) {\n        console.log('UrlBlocker: Found predefined site handler for domain:', siteHandler.domain);\n        await this.applySiteHandler(tabId, siteHandler);\n        return;\n      }\n\n      console.log('UrlBlocker: No predefined site handler found, checking user selectors');\n\n      // 如果没有预设处理器，使用用户配置的选择器\n      const selectors = studyModeSelectors[domain] || [];\n\n      console.log('UrlBlocker: User selectors for domain:', domain, selectors);\n\n      if (selectors.length === 0) {\n        console.log('UrlBlocker: No selectors configured for study mode URL:', url);\n        return;\n      }\n\n      // 注入CSS隐藏指定元素\n      await this.injectHideElements(tabId, selectors);\n\n      console.log('UrlBlocker: Study mode applied to:', url, 'with selectors:', selectors);\n    } catch (error) {\n      console.error('Error handling study mode URL:', error);\n    }\n  }\n\n  /**\n   * 注入CSS隐藏元素\n   */\n  private async injectHideElements(tabId: number, selectors: string[]): Promise<void> {\n    try {\n      const css = selectors.map(selector => `${selector} { display: none !important; }`).join('\\n');\n\n      await chrome.scripting.insertCSS({\n        target: { tabId },\n        css: css,\n      });\n\n      console.log('CSS injected to hide elements:', selectors);\n    } catch (error) {\n      console.error('Error injecting CSS:', error);\n    }\n  }\n\n  /**\n   * 应用网站特定处理器\n   */\n  private async applySiteHandler(tabId: number, siteHandler: SiteHandler): Promise<void> {\n    try {\n      const selectors = siteHandler.getSelectors();\n\n      // 检查标签页状态\n      const tab = await chrome.tabs.get(tabId);\n      console.log('UrlBlocker: Tab status before injection:', {\n        tabId,\n        status: tab.status,\n        url: tab.url,\n        domain: siteHandler.domain,\n      });\n\n      // 如果页面还在加载，等待一下\n      if (tab.status === 'loading') {\n        console.log('UrlBlocker: Page is loading, waiting...');\n        await new Promise(resolve => setTimeout(resolve, 1000));\n      }\n\n      // 如果有自定义处理函数，使用自定义处理函数\n      if (siteHandler.getCustomHandler) {\n        const customHandler = siteHandler.getCustomHandler(tabId);\n        console.log('UrlBlocker: Executing custom handler for:', tabId, siteHandler.domain, selectors);\n\n        try {\n          const result = await chrome.scripting.executeScript({\n            target: { tabId },\n            func: customHandler,\n            args: [selectors],\n          });\n\n          console.log('UrlBlocker: Script injection result:', result);\n          console.log('UrlBlocker: Applied custom site handler for:', siteHandler.domain);\n        } catch (injectionError) {\n          console.error('UrlBlocker: Script injection failed:', injectionError);\n          // 降级到CSS注入\n          console.log('UrlBlocker: Falling back to CSS injection');\n          await this.injectHideElements(tabId, selectors);\n        }\n      } else {\n        // 否则使用默认的CSS隐藏方式\n        await this.injectHideElements(tabId, selectors);\n        console.log('UrlBlocker: Applied default site handler for:', siteHandler.domain);\n      }\n    } catch (error) {\n      console.error('Error applying site handler:', error);\n    }\n  }\n\n  /**\n   * 添加阻止的URL\n   */\n  async addBlockedUrl(url: string): Promise<void> {\n    try {\n      await blockedUrlsStorage.addUrl(url);\n      console.log('URL added to blocked list:', url);\n    } catch (error) {\n      console.error('Error adding blocked URL:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 移除阻止的URL\n   */\n  async removeBlockedUrl(url: string): Promise<void> {\n    try {\n      await blockedUrlsStorage.removeUrl(url);\n      console.log('URL removed from blocked list:', url);\n    } catch (error) {\n      console.error('Error removing blocked URL:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 添加学习模式URL\n   */\n  async addStudyModeUrl(url: string): Promise<void> {\n    try {\n      await blockedUrlsStorage.addStudyModeUrl(url);\n      console.log('URL added to study mode list:', url);\n    } catch (error) {\n      console.error('Error adding study mode URL:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 移除学习模式URL\n   */\n  async removeStudyModeUrl(url: string): Promise<void> {\n    try {\n      await blockedUrlsStorage.removeStudyModeUrl(url);\n      console.log('URL removed from study mode list:', url);\n    } catch (error) {\n      console.error('Error removing study mode URL:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 获取阻止的URL列表\n   */\n  async getBlockedUrls(): Promise<{ urls: string[]; studyModeUrls: string[] }> {\n    try {\n      const config = await blockedUrlsStorage.get();\n      return {\n        urls: config.urls,\n        studyModeUrls: config.studyModeUrls,\n      };\n    } catch (error) {\n      console.error('Error getting blocked URLs:', error);\n      return { urls: [], studyModeUrls: [] };\n    }\n  }\n\n  /**\n   * 初始化预设网站处理器\n   * 自动将有预设处理器的网站添加到学习模式列表\n   */\n  async initializePredefinedSites(): Promise<void> {\n    try {\n      const config = await blockedUrlsStorage.get();\n      console.log('UrlBlocker: Current config before initialization:', config);\n      let hasChanges = false;\n\n      // 检查每个预设网站处理器\n      for (const handler of siteHandlers) {\n        const domain = handler.domain;\n\n        // 如果该域名还没有在学习模式列表中，添加它\n        if (!config.studyModeUrls.includes(domain)) {\n          config.studyModeUrls.push(domain);\n          hasChanges = true;\n          console.log('UrlBlocker: Added predefined site to study mode:', domain);\n        } else {\n          console.log('UrlBlocker: Predefined site already in study mode:', domain);\n        }\n      }\n\n      // 如果有变化，保存配置\n      if (hasChanges) {\n        await blockedUrlsStorage.set(config);\n        console.log('UrlBlocker: Predefined sites initialized');\n      } else {\n        console.log('UrlBlocker: No changes needed, all predefined sites already configured');\n      }\n\n      // 输出最终配置用于调试\n      const finalConfig = await blockedUrlsStorage.get();\n      console.log('UrlBlocker: Final config after initialization:', finalConfig);\n    } catch (error) {\n      console.error('Error initializing predefined sites:', error);\n    }\n  }\n}\n","import { focusStorage, aiConfigStorage } from '@extension/storage';\nimport { TIMEOUTS, FOCUS, NOTIFICATION_IDS } from '../../constants/index.js';\nimport { AudioManager } from './audioManager.js';\nimport { NotificationManager } from './notificationManager.js';\nimport { UrlBlocker } from './urlBlocker.js';\n\nexport class FocusManager {\n  private static instance: FocusManager;\n  private timerInterval: NodeJS.Timeout | null = null;\n\n  private constructor() {}\n\n  static getInstance(): FocusManager {\n    if (!FocusManager.instance) {\n      FocusManager.instance = new FocusManager();\n    }\n    return FocusManager.instance;\n  }\n\n  /**\n   * 启动专注模式\n   */\n  async startFocus(duration: number): Promise<void> {\n    try {\n      await focusStorage.startFocus(duration);\n\n      // 显示启动通知\n      const startMessage = `专注模式已启动，专注时间：${duration}分钟。加油，保持专注！`;\n\n      chrome.notifications.create(NOTIFICATION_IDS.FOCUS_START, {\n        type: 'basic',\n        iconUrl: chrome.runtime.getURL('spring-128.png'),\n        title: '专注模式已启动',\n        message: `专注时间：${duration}分钟`,\n      });\n\n      // 播放TTS语音通知\n      await AudioManager.getInstance().playTTSNotification(startMessage);\n\n      // 设置徽章\n      chrome.action.setBadgeText({ text: FOCUS.BADGE_TEXT });\n      chrome.action.setBadgeBackgroundColor({ color: FOCUS.BADGE_COLOR });\n\n      // 启动定时器检查\n      this.startTimerCheck();\n\n      // 预生成AI通知\n      await this.preGenerateNotification(duration);\n\n      // 检查所有已打开的标签页\n      await this.checkAllOpenTabs();\n\n      console.log(`Focus mode started for ${duration} minutes`);\n    } catch (error) {\n      console.error('Error starting focus mode:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 停止专注模式\n   */\n  async stopFocus(): Promise<void> {\n    try {\n      await focusStorage.stopFocus();\n\n      // 清除徽章\n      chrome.action.setBadgeText({ text: '' });\n\n      // 停止定时器\n      this.stopTimerCheck();\n\n      console.log('Focus mode stopped');\n    } catch (error) {\n      console.error('Error stopping focus mode:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * 启动定时器检查\n   */\n  private startTimerCheck(): void {\n    if (this.timerInterval) {\n      clearInterval(this.timerInterval);\n    }\n\n    this.timerInterval = setInterval(async () => {\n      await this.checkFocusTimer();\n    }, TIMEOUTS.TIMER_CHECK_INTERVAL);\n  }\n\n  /**\n   * 停止定时器检查\n   */\n  private stopTimerCheck(): void {\n    if (this.timerInterval) {\n      clearInterval(this.timerInterval);\n      this.timerInterval = null;\n    }\n  }\n\n  /**\n   * 检查专注计时器\n   */\n  private async checkFocusTimer(): Promise<void> {\n    try {\n      const focusConfig = await focusStorage.get();\n\n      if (!focusConfig.isActive) {\n        this.stopTimerCheck();\n        return;\n      }\n\n      const remainingTime = await focusStorage.getRemainingTime();\n\n      if (remainingTime <= 0) {\n        // 专注时间结束\n        await this.handleFocusEnd();\n      } else {\n        // 更新徽章显示剩余时间\n        const minutes = Math.ceil(remainingTime / 60);\n        chrome.action.setBadgeText({ text: minutes.toString() });\n      }\n    } catch (error) {\n      console.error('Error checking focus timer:', error);\n    }\n  }\n\n  /**\n   * 处理专注时间结束\n   */\n  private async handleFocusEnd(): Promise<void> {\n    try {\n      // 停止专注模式\n      await this.stopFocus();\n\n      // 获取通知消息\n      const notificationMessage = await NotificationManager.getInstance().getEndNotification();\n\n      // 显示结束通知\n      chrome.notifications.create(NOTIFICATION_IDS.FOCUS_END, {\n        type: 'basic',\n        iconUrl: chrome.runtime.getURL('spring-128.png'),\n        title: '专注模式已结束',\n        message: notificationMessage,\n      });\n\n      // 播放TTS语音通知\n      await AudioManager.getInstance().playTTSNotification(notificationMessage);\n\n      console.log('Focus session completed');\n    } catch (error) {\n      console.error('Error handling focus end:', error);\n    }\n  }\n\n  /**\n   * 预生成AI通知\n   */\n  private async preGenerateNotification(duration: number): Promise<void> {\n    try {\n      const aiConfig = await aiConfigStorage.get();\n      if (!aiConfig.enabled) {\n        return;\n      }\n\n      // 预生成通知内容\n      await NotificationManager.getInstance().preGenerateNotification(duration);\n    } catch (error) {\n      console.error('Error pre-generating notification:', error);\n    }\n  }\n\n  /**\n   * 检查所有已打开的标签页\n   */\n  private async checkAllOpenTabs(): Promise<void> {\n    try {\n      console.log('FocusManager: Checking all open tabs for blocked URLs');\n\n      // 获取所有标签页\n      const tabs = await chrome.tabs.query({});\n      const urlBlocker = UrlBlocker.getInstance();\n\n      // 检查每个标签页\n      for (const tab of tabs) {\n        if (tab.id && tab.url && !tab.url.startsWith('chrome://') && !tab.url.startsWith('chrome-extension://')) {\n          console.log('FocusManager: Checking tab:', tab.url);\n          await urlBlocker.checkTabUrl(tab.id, tab.url);\n        }\n      }\n\n      console.log('FocusManager: Finished checking all open tabs');\n    } catch (error) {\n      console.error('Error checking all open tabs:', error);\n    }\n  }\n\n  /**\n   * 获取当前专注状态\n   */\n  async getFocusStatus(): Promise<{ isActive: boolean; remainingTime: number }> {\n    const focusConfig = await focusStorage.get();\n    const remainingTime = await focusStorage.getRemainingTime();\n\n    return {\n      isActive: focusConfig.isActive,\n      remainingTime,\n    };\n  }\n\n  /**\n   * 初始化专注管理器\n   */\n  async initialize(): Promise<void> {\n    try {\n      const focusConfig = await focusStorage.get();\n\n      if (focusConfig.isActive) {\n        // 如果专注模式已激活，恢复定时器检查\n        this.startTimerCheck();\n\n        // 设置徽章\n        chrome.action.setBadgeText({ text: FOCUS.BADGE_TEXT });\n        chrome.action.setBadgeBackgroundColor({ color: FOCUS.BADGE_COLOR });\n\n        console.log('Focus mode restored from storage');\n      }\n    } catch (error) {\n      console.error('Error initializing focus manager:', error);\n    }\n  }\n}\n","import 'webextension-polyfill';\nimport { exampleThemeStorage } from '@extension/storage';\nimport { FocusManager } from './managers/focusManager.js';\nimport { AudioManager } from './managers/audioManager.js';\nimport { UrlBlocker } from './managers/urlBlocker.js';\nimport { MESSAGE_TYPES } from '../constants/index.js';\n\n// 管理器实例\nconst focusManager = FocusManager.getInstance();\nconst audioManager = AudioManager.getInstance();\nconst urlBlocker = UrlBlocker.getInstance();\n\n// 消息监听器\nchrome.runtime.onMessage.addListener((message, _sender, sendResponse) => {\n  if (message.type === MESSAGE_TYPES.TEST_TTS) {\n    // 处理TTS测试请求\n    audioManager\n      .testTTS(message.text)\n      .then(result => sendResponse(result))\n      .catch(error => {\n        console.error('TTS test error:', error);\n        sendResponse({ success: false, error: error.message });\n      });\n    return true; // 保持消息通道开放以进行异步响应\n  }\n  return false;\n});\n\n// 监听存储变化\nchrome.storage.onChanged.addListener(async (changes, areaName) => {\n  if (areaName === 'local') {\n    // 监听专注时间配置变化\n    if (changes['focus-time-storage-key']) {\n      const newValue = changes['focus-time-storage-key'].newValue;\n      const oldValue = changes['focus-time-storage-key'].oldValue;\n\n      // 如果状态从非活跃变为活跃，启动专注模式\n      if (newValue?.isActive && !oldValue?.isActive) {\n        await focusManager.startFocus(newValue.duration);\n      }\n      // 如果状态从活跃变为非活跃，停止专注模式\n      else if (!newValue?.isActive && oldValue?.isActive) {\n        await focusManager.stopFocus();\n      }\n    }\n\n    // 监听TTS配置变化\n    if (changes['tts-config-storage-key']) {\n      const newValue = changes['tts-config-storage-key'].newValue;\n      const oldValue = changes['tts-config-storage-key'].oldValue;\n\n      // 如果voiceType发生变化，清除语音缓存\n      if (newValue?.voiceType && oldValue?.voiceType && newValue.voiceType !== oldValue.voiceType) {\n        console.log('VoiceType changed, clearing voice cache');\n        await audioManager.clearVoiceCacheOnVoiceTypeChange(oldValue.voiceType, newValue.voiceType);\n      }\n    }\n  }\n});\n\n// 监听标签页更新\nchrome.tabs.onUpdated.addListener(async (tabId, changeInfo, tab) => {\n  if (changeInfo.status === 'complete' && tab.url) {\n    await urlBlocker.checkTabUrl(tabId, tab.url);\n  }\n});\n\n// 监听标签页激活\nchrome.tabs.onActivated.addListener(async activeInfo => {\n  try {\n    const tab = await chrome.tabs.get(activeInfo.tabId);\n    if (tab.url) {\n      await urlBlocker.checkTabUrl(activeInfo.tabId, tab.url);\n    }\n  } catch (error) {\n    console.error('Error handling tab activation:', error);\n  }\n});\n\n// 初始化\nasync function initialize() {\n  try {\n    console.log('Initializing background script...');\n\n    // 初始化主题\n    const theme = await exampleThemeStorage.get();\n    console.log('Theme loaded:', theme);\n\n    // 初始化专注管理器\n    await focusManager.initialize();\n\n    // 初始化预设网站处理器\n    await urlBlocker.initializePredefinedSites();\n\n    console.log('Background script initialized successfully');\n  } catch (error) {\n    console.error('Error during initialization:', error);\n  }\n}\n\n// 启动初始化\ninitialize();\n"],"names":["this","module","proxyTarget","value","message","StorageEnum","SessionAccessLevelEnum","chrome","AIProvider","response","handler","matches","urlBlocker"],"mappings":"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","x_google_ignoreList":[0]}